/*
 * Register definitions for the Paintbox programmable IPU
 *
 * Copyright (C) 2015 Google, Inc.
 *
 * This software is licensed under the terms of the GNU General Public
 * License version 2, as published by the Free Software Foundation, and
 * may be copied, distributed, and modified under those terms.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#ifndef __PAINTBOX_REGS_H__
#define __PAINTBOX_REGS_H__

#include <linux/types.h>

#define REG_UNUSED "UNKNOWN"

/* TODO(ahampson):  Switch this to uint64_t once all the registers are
 * converted to 64bit.
*/
#define IPU_REG_WIDTH sizeof(uint32_t)

/* Number of bytes allocated for each register trace when dumping the register
 * contents through verbose logging or debugfs.
 */
#define REG_DEBUG_BUFFER_SIZE 96

#define REG_INDEX(r) ((r) / IPU_REG_WIDTH)
#define REG_NAME_ENTRY(r) [(r) / IPU_REG_WIDTH] = #r

#define STP_INST_SRAM_INSTRUCTION_WIDTH_BYTES 16
#define STP_CONST_SRAM_WORD_WIDTH_BYTES       2
#define STP_SCALAR_SRAM_WORD_WIDTH_BYTES      2
#define STP_VECTOR_SRAM_WORD_WIDTH_BYTES      2

/* Width of STP RAM transfer through PIO interface */
#define STP_PIO_WORD_WIDTH_BYTES  16

/* Register Group Offsets */
#define IPU_IO_APB_OFFSET              0x0000
#define IPU_IO_AXI_OFFSET              0x0400
#define IPU_IO_IPU_OFFSET              0x0800
#define IPU_DMA_OFFSET                 0x0C00
#define IPU_STP_OFFSET                 0x1000
#define IPU_LBP_OFFSET                 0x1400
#define IPU_IO_ADB_OFFSET              0x1800
#define IPU_RESERVED_OFFSET            0x1C00
#define IPU_REGISTER_SPACE_LEN         0x3FFF

/* Note that the APB and AXI register groups are taken from the generated
 * paintbox-regs.h.  Once the code that uses the register groups is completely
 * switched over this file will become auto-generated.
 */

/* Module : IPU_LIB_DREGFILE_APB*/
#define IPU_VERSION 0x0
#define IPU_VERSION_FPGA_BUILD_M 0x1ULL
#define IPU_VERSION_FPGA_BUILD_SHIFT 23
#define IPU_VERSION_FPGA_BUILD_MASK (IPU_VERSION_FPGA_BUILD_M << IPU_VERSION_FPGA_BUILD_SHIFT)
#define IPU_VERSION_MAJOR_M 0xffULL
#define IPU_VERSION_MAJOR_SHIFT 24
#define IPU_VERSION_MAJOR_MASK (IPU_VERSION_MAJOR_M << IPU_VERSION_MAJOR_SHIFT)
#define IPU_VERSION_INCR_M 0xffULL
#define IPU_VERSION_INCR_SHIFT 0
#define IPU_VERSION_INCR_MASK (IPU_VERSION_INCR_M << IPU_VERSION_INCR_SHIFT)
#define IPU_VERSION_MINOR_M 0xffULL
#define IPU_VERSION_MINOR_SHIFT 8
#define IPU_VERSION_MINOR_MASK (IPU_VERSION_MINOR_M << IPU_VERSION_MINOR_SHIFT)
#define IPU_CHECKSUM 0x8
#define IPU_CHECKSUM_LOW_M 0xffffffffULL
#define IPU_CHECKSUM_LOW_SHIFT 0
#define IPU_CHECKSUM_LOW_MASK (IPU_CHECKSUM_LOW_M << IPU_CHECKSUM_LOW_SHIFT)
#define IPU_CHECKSUM_HIGH_M 0xffffffffULL
#define IPU_CHECKSUM_HIGH_SHIFT 32
#define IPU_CHECKSUM_HIGH_MASK (IPU_CHECKSUM_HIGH_M << IPU_CHECKSUM_HIGH_SHIFT)
#define IPU_ISR 0x10
#define IPU_ISR_MMU_INTR_M 0x1ULL
#define IPU_ISR_MMU_INTR_SHIFT 25
#define IPU_ISR_MMU_INTR_MASK (IPU_ISR_MMU_INTR_M << IPU_ISR_MMU_INTR_SHIFT)
#define IPU_ISR_STP_INTR_M 0xffULL
#define IPU_ISR_STP_INTR_SHIFT 16
#define IPU_ISR_STP_INTR_MASK (IPU_ISR_STP_INTR_M << IPU_ISR_STP_INTR_SHIFT)
#define IPU_ISR_DMA_CHAN_INTR_M 0xffffULL
#define IPU_ISR_DMA_CHAN_INTR_SHIFT 0
#define IPU_ISR_DMA_CHAN_INTR_MASK (IPU_ISR_DMA_CHAN_INTR_M << IPU_ISR_DMA_CHAN_INTR_SHIFT)
#define IPU_ISR_BIF_INTR_M 0x1ULL
#define IPU_ISR_BIF_INTR_SHIFT 24
#define IPU_ISR_BIF_INTR_MASK (IPU_ISR_BIF_INTR_M << IPU_ISR_BIF_INTR_SHIFT)
#define IPU_ISR_MIF_INTR_M 0x1fULL
#define IPU_ISR_MIF_INTR_SHIFT 26
#define IPU_ISR_MIF_INTR_MASK (IPU_ISR_MIF_INTR_M << IPU_ISR_MIF_INTR_SHIFT)
#define IPU_IMR 0x18
#define IPU_IMR_BIF_INTR_M 0x1ULL
#define IPU_IMR_BIF_INTR_SHIFT 24
#define IPU_IMR_BIF_INTR_MASK (IPU_IMR_BIF_INTR_M << IPU_IMR_BIF_INTR_SHIFT)
#define IPU_IMR_MMU_INTR_M 0x1ULL
#define IPU_IMR_MMU_INTR_SHIFT 25
#define IPU_IMR_MMU_INTR_MASK (IPU_IMR_MMU_INTR_M << IPU_IMR_MMU_INTR_SHIFT)
#define IPU_IMR_STP_INTR_M 0xffULL
#define IPU_IMR_STP_INTR_SHIFT 16
#define IPU_IMR_STP_INTR_MASK (IPU_IMR_STP_INTR_M << IPU_IMR_STP_INTR_SHIFT)
#define IPU_IMR_DMA_CHAN_INTR_M 0xffffULL
#define IPU_IMR_DMA_CHAN_INTR_SHIFT 0
#define IPU_IMR_DMA_CHAN_INTR_MASK (IPU_IMR_DMA_CHAN_INTR_M << IPU_IMR_DMA_CHAN_INTR_SHIFT)
#define IPU_IMR_MIF_INTR_M 0x1fULL
#define IPU_IMR_MIF_INTR_SHIFT 26
#define IPU_IMR_MIF_INTR_MASK (IPU_IMR_MIF_INTR_M << IPU_IMR_MIF_INTR_SHIFT)
#define IPU_CAP 0x20
#define IPU_CAP_NUM_STP_M 0xffULL
#define IPU_CAP_NUM_STP_SHIFT 0
#define IPU_CAP_NUM_STP_MASK (IPU_CAP_NUM_STP_M << IPU_CAP_NUM_STP_SHIFT)
#define IPU_CAP_NUM_LBP_M 0xffULL
#define IPU_CAP_NUM_LBP_SHIFT 8
#define IPU_CAP_NUM_LBP_MASK (IPU_CAP_NUM_LBP_M << IPU_CAP_NUM_LBP_SHIFT)
#define CLK_GATE_CONTROL_STP_IDLE_GATE_DIS 0x28
#define CLK_GATE_CONTROL_LBP_IDLE_GATE_DIS 0x30
#define CLK_GATE_CONTROL 0x38
#define CLK_GATE_CONTROL_DMA_IDLE_GATE_DIS_M 0x1ULL
#define CLK_GATE_CONTROL_DMA_IDLE_GATE_DIS_SHIFT 0
#define CLK_GATE_CONTROL_DMA_IDLE_GATE_DIS_MASK (CLK_GATE_CONTROL_DMA_IDLE_GATE_DIS_M << CLK_GATE_CONTROL_DMA_IDLE_GATE_DIS_SHIFT)
#define CLK_GATE_CONTROL_SSP_IDLE_GATE_DIS_M 0x1ULL
#define CLK_GATE_CONTROL_SSP_IDLE_GATE_DIS_SHIFT 2
#define CLK_GATE_CONTROL_SSP_IDLE_GATE_DIS_MASK (CLK_GATE_CONTROL_SSP_IDLE_GATE_DIS_M << CLK_GATE_CONTROL_SSP_IDLE_GATE_DIS_SHIFT)
#define CLK_GATE_CONTROL_MMU_BIF_IDLE_GATE_DIS_M 0x1ULL
#define CLK_GATE_CONTROL_MMU_BIF_IDLE_GATE_DIS_SHIFT 1
#define CLK_GATE_CONTROL_MMU_BIF_IDLE_GATE_DIS_MASK (CLK_GATE_CONTROL_MMU_BIF_IDLE_GATE_DIS_M << CLK_GATE_CONTROL_MMU_BIF_IDLE_GATE_DIS_SHIFT)
#define IPU_CORE_PAIRS_EN 0x40
#define CORE_POWER_ON_N 0x48
#define CORE_ISO_ON 0x50
#define CORE_RAM_ON_N 0x58
#define IPU_DMA_CHAN_EN 0x60
#define APB_SPARE 0x68
#define APB_SPARE_SPARE0_M 0x1ULL
#define APB_SPARE_SPARE0_SHIFT 0
#define APB_SPARE_SPARE0_MASK (APB_SPARE_SPARE0_M << APB_SPARE_SPARE0_SHIFT)
#define APB_SPARE_SPARE1_M 0x1ULL
#define APB_SPARE_SPARE1_SHIFT 1
#define APB_SPARE_SPARE1_MASK (APB_SPARE_SPARE1_M << APB_SPARE_SPARE1_SHIFT)
#define APB_SPARE_SPARE2_M 0x1ULL
#define APB_SPARE_SPARE2_SHIFT 2
#define APB_SPARE_SPARE2_MASK (APB_SPARE_SPARE2_M << APB_SPARE_SPARE2_SHIFT)
#define APB_SPARE_SPARE3_M 0x1ULL
#define APB_SPARE_SPARE3_SHIFT 3
#define APB_SPARE_SPARE3_MASK (APB_SPARE_SPARE3_M << APB_SPARE_SPARE3_SHIFT)
#define APB_SPARE_SPARE4_M 0x1ULL
#define APB_SPARE_SPARE4_SHIFT 4
#define APB_SPARE_SPARE4_MASK (APB_SPARE_SPARE4_M << APB_SPARE_SPARE4_SHIFT)
#define APB_SPARE_SPARE5_M 0x1ULL
#define APB_SPARE_SPARE5_SHIFT 5
#define APB_SPARE_SPARE5_MASK (APB_SPARE_SPARE5_M << APB_SPARE_SPARE5_SHIFT)
#define APB_SPARE_SPARE6_M 0x1ULL
#define APB_SPARE_SPARE6_SHIFT 6
#define APB_SPARE_SPARE6_MASK (APB_SPARE_SPARE6_M << APB_SPARE_SPARE6_SHIFT)
#define APB_SPARE_SPARE7_M 0x1ULL
#define APB_SPARE_SPARE7_SHIFT 7
#define APB_SPARE_SPARE7_MASK (APB_SPARE_SPARE7_M << APB_SPARE_SPARE7_SHIFT)
#define APB_SPARE_SPARE8_M 0x1ULL
#define APB_SPARE_SPARE8_SHIFT 8
#define APB_SPARE_SPARE8_MASK (APB_SPARE_SPARE8_M << APB_SPARE_SPARE8_SHIFT)
#define APB_SPARE_SPARE9_M 0x1ULL
#define APB_SPARE_SPARE9_SHIFT 9
#define APB_SPARE_SPARE9_MASK (APB_SPARE_SPARE9_M << APB_SPARE_SPARE9_SHIFT)
#define APB_SPARE_SPARE12_M 0x1ULL
#define APB_SPARE_SPARE12_SHIFT 12
#define APB_SPARE_SPARE12_MASK (APB_SPARE_SPARE12_M << APB_SPARE_SPARE12_SHIFT)
#define APB_SPARE_SPARE13_M 0x1ULL
#define APB_SPARE_SPARE13_SHIFT 13
#define APB_SPARE_SPARE13_MASK (APB_SPARE_SPARE13_M << APB_SPARE_SPARE13_SHIFT)
#define APB_SPARE_SPARE10_M 0x1ULL
#define APB_SPARE_SPARE10_SHIFT 10
#define APB_SPARE_SPARE10_MASK (APB_SPARE_SPARE10_M << APB_SPARE_SPARE10_SHIFT)
#define APB_SPARE_SPARE11_M 0x1ULL
#define APB_SPARE_SPARE11_SHIFT 11
#define APB_SPARE_SPARE11_MASK (APB_SPARE_SPARE11_M << APB_SPARE_SPARE11_SHIFT)
#define APB_SPARE_SPARE14_M 0x1ULL
#define APB_SPARE_SPARE14_SHIFT 14
#define APB_SPARE_SPARE14_MASK (APB_SPARE_SPARE14_M << APB_SPARE_SPARE14_SHIFT)
#define APB_SPARE_SPARE15_M 0x1ULL
#define APB_SPARE_SPARE15_SHIFT 15
#define APB_SPARE_SPARE15_MASK (APB_SPARE_SPARE15_M << APB_SPARE_SPARE15_SHIFT)

/* Module : IPU_LIB_DREGFILE_AXI*/
#define MMU_CTRL 0x0
#define MMU_CTRL_MMU_ENABLE_M 0x1ULL
#define MMU_CTRL_MMU_ENABLE_SHIFT 0
#define MMU_CTRL_MMU_ENABLE_MASK (MMU_CTRL_MMU_ENABLE_M << MMU_CTRL_MMU_ENABLE_SHIFT)
#define MMU_CTRL_PREFETCH_ENABLE_M 0x1ULL
#define MMU_CTRL_PREFETCH_ENABLE_SHIFT 1
#define MMU_CTRL_PREFETCH_ENABLE_MASK (MMU_CTRL_PREFETCH_ENABLE_M << MMU_CTRL_PREFETCH_ENABLE_SHIFT)
#define MMU_CTRL_SINGLE_TWE_M 0x1ULL
#define MMU_CTRL_SINGLE_TWE_SHIFT 2
#define MMU_CTRL_SINGLE_TWE_MASK (MMU_CTRL_SINGLE_TWE_M << MMU_CTRL_SINGLE_TWE_SHIFT)
#define MMU_TABLE_BASE 0x8
#define MMU_TABLE_BASE_ADDR_M 0xffffULL
#define MMU_TABLE_BASE_ADDR_SHIFT 3
#define MMU_TABLE_BASE_ADDR_MASK (MMU_TABLE_BASE_ADDR_M << MMU_TABLE_BASE_ADDR_SHIFT)
#define MMU_ERR_BASE 0x10
#define MMU_ERR_BASE_ADDR_M 0xfffffULL
#define MMU_ERR_BASE_ADDR_SHIFT 0
#define MMU_ERR_BASE_ADDR_MASK (MMU_ERR_BASE_ADDR_M << MMU_ERR_BASE_ADDR_SHIFT)
#define MMU_SYNC 0x18
#define MMU_FLUSH_CHANNEL 0x20
#define MMU_FLUSH_ADDRESS 0x28
#define MMU_FLUSH_FIFO_LEVEL 0x30
#define MMU_FLUSH_FIFO_FULL 0x38
#define MMU_ISR 0x40
#define MMU_ISR_FLUSH_MEMRD_ERR_M 0x1ULL
#define MMU_ISR_FLUSH_MEMRD_ERR_SHIFT 4
#define MMU_ISR_FLUSH_MEMRD_ERR_MASK (MMU_ISR_FLUSH_MEMRD_ERR_M << MMU_ISR_FLUSH_MEMRD_ERR_SHIFT)
#define MMU_ISR_TWE_MEMRD_ERR_M 0x1ULL
#define MMU_ISR_TWE_MEMRD_ERR_SHIFT 2
#define MMU_ISR_TWE_MEMRD_ERR_MASK (MMU_ISR_TWE_MEMRD_ERR_M << MMU_ISR_TWE_MEMRD_ERR_SHIFT)
#define MMU_ISR_FLUSH_FULL_ERR_M 0x1ULL
#define MMU_ISR_FLUSH_FULL_ERR_SHIFT 6
#define MMU_ISR_FLUSH_FULL_ERR_MASK (MMU_ISR_FLUSH_FULL_ERR_M << MMU_ISR_FLUSH_FULL_ERR_SHIFT)
#define MMU_ISR_TWE_ACCESS_VIO_M 0x1ULL
#define MMU_ISR_TWE_ACCESS_VIO_SHIFT 0
#define MMU_ISR_TWE_ACCESS_VIO_MASK (MMU_ISR_TWE_ACCESS_VIO_M << MMU_ISR_TWE_ACCESS_VIO_SHIFT)
#define MMU_ISR_PREFETCH_MEMRD_ERR_M 0x1ULL
#define MMU_ISR_PREFETCH_MEMRD_ERR_SHIFT 5
#define MMU_ISR_PREFETCH_MEMRD_ERR_MASK (MMU_ISR_PREFETCH_MEMRD_ERR_M << MMU_ISR_PREFETCH_MEMRD_ERR_SHIFT)
#define MMU_ISR_TWE_INVALID_TABLE_M 0x1ULL
#define MMU_ISR_TWE_INVALID_TABLE_SHIFT 1
#define MMU_ISR_TWE_INVALID_TABLE_MASK (MMU_ISR_TWE_INVALID_TABLE_M << MMU_ISR_TWE_INVALID_TABLE_SHIFT)
#define MMU_ISR_FLUSH_INVALID_TABLE_M 0x1ULL
#define MMU_ISR_FLUSH_INVALID_TABLE_SHIFT 3
#define MMU_ISR_FLUSH_INVALID_TABLE_MASK (MMU_ISR_FLUSH_INVALID_TABLE_M << MMU_ISR_FLUSH_INVALID_TABLE_SHIFT)
#define MMU_IMR 0x48
#define MMU_IMR_PREFETCH_MEMRD_ERR_M 0x1ULL
#define MMU_IMR_PREFETCH_MEMRD_ERR_SHIFT 5
#define MMU_IMR_PREFETCH_MEMRD_ERR_MASK (MMU_IMR_PREFETCH_MEMRD_ERR_M << MMU_IMR_PREFETCH_MEMRD_ERR_SHIFT)
#define MMU_IMR_TWE_ACCESS_VIO_M 0x1ULL
#define MMU_IMR_TWE_ACCESS_VIO_SHIFT 0
#define MMU_IMR_TWE_ACCESS_VIO_MASK (MMU_IMR_TWE_ACCESS_VIO_M << MMU_IMR_TWE_ACCESS_VIO_SHIFT)
#define MMU_IMR_TWE_MEMRD_ERR_M 0x1ULL
#define MMU_IMR_TWE_MEMRD_ERR_SHIFT 2
#define MMU_IMR_TWE_MEMRD_ERR_MASK (MMU_IMR_TWE_MEMRD_ERR_M << MMU_IMR_TWE_MEMRD_ERR_SHIFT)
#define MMU_IMR_FLUSH_MEMRD_ERR_M 0x1ULL
#define MMU_IMR_FLUSH_MEMRD_ERR_SHIFT 4
#define MMU_IMR_FLUSH_MEMRD_ERR_MASK (MMU_IMR_FLUSH_MEMRD_ERR_M << MMU_IMR_FLUSH_MEMRD_ERR_SHIFT)
#define MMU_IMR_TWE_INVALID_TABLE_M 0x1ULL
#define MMU_IMR_TWE_INVALID_TABLE_SHIFT 1
#define MMU_IMR_TWE_INVALID_TABLE_MASK (MMU_IMR_TWE_INVALID_TABLE_M << MMU_IMR_TWE_INVALID_TABLE_SHIFT)
#define MMU_IMR_FLUSH_FULL_ERR_M 0x1ULL
#define MMU_IMR_FLUSH_FULL_ERR_SHIFT 6
#define MMU_IMR_FLUSH_FULL_ERR_MASK (MMU_IMR_FLUSH_FULL_ERR_M << MMU_IMR_FLUSH_FULL_ERR_SHIFT)
#define MMU_IMR_FLUSH_INVALID_TABLE_M 0x1ULL
#define MMU_IMR_FLUSH_INVALID_TABLE_SHIFT 3
#define MMU_IMR_FLUSH_INVALID_TABLE_MASK (MMU_IMR_FLUSH_INVALID_TABLE_M << MMU_IMR_FLUSH_INVALID_TABLE_SHIFT)
#define MMU_ISR_OVF 0x50
#define MMU_ISR_OVF_FLUSH_MEMRD_ERR_M 0x1ULL
#define MMU_ISR_OVF_FLUSH_MEMRD_ERR_SHIFT 4
#define MMU_ISR_OVF_FLUSH_MEMRD_ERR_MASK (MMU_ISR_OVF_FLUSH_MEMRD_ERR_M << MMU_ISR_OVF_FLUSH_MEMRD_ERR_SHIFT)
#define MMU_ISR_OVF_TWE_INVALID_TABLE_M 0x1ULL
#define MMU_ISR_OVF_TWE_INVALID_TABLE_SHIFT 1
#define MMU_ISR_OVF_TWE_INVALID_TABLE_MASK (MMU_ISR_OVF_TWE_INVALID_TABLE_M << MMU_ISR_OVF_TWE_INVALID_TABLE_SHIFT)
#define MMU_ISR_OVF_TWE_MEMRD_ERR_M 0x1ULL
#define MMU_ISR_OVF_TWE_MEMRD_ERR_SHIFT 2
#define MMU_ISR_OVF_TWE_MEMRD_ERR_MASK (MMU_ISR_OVF_TWE_MEMRD_ERR_M << MMU_ISR_OVF_TWE_MEMRD_ERR_SHIFT)
#define MMU_ISR_OVF_TWE_ACCESS_VIO_M 0x1ULL
#define MMU_ISR_OVF_TWE_ACCESS_VIO_SHIFT 0
#define MMU_ISR_OVF_TWE_ACCESS_VIO_MASK (MMU_ISR_OVF_TWE_ACCESS_VIO_M << MMU_ISR_OVF_TWE_ACCESS_VIO_SHIFT)
#define MMU_ISR_OVF_FLUSH_FULL_ERR_M 0x1ULL
#define MMU_ISR_OVF_FLUSH_FULL_ERR_SHIFT 6
#define MMU_ISR_OVF_FLUSH_FULL_ERR_MASK (MMU_ISR_OVF_FLUSH_FULL_ERR_M << MMU_ISR_OVF_FLUSH_FULL_ERR_SHIFT)
#define MMU_ISR_OVF_PREFETCH_MEMRD_ERR_M 0x1ULL
#define MMU_ISR_OVF_PREFETCH_MEMRD_ERR_SHIFT 5
#define MMU_ISR_OVF_PREFETCH_MEMRD_ERR_MASK (MMU_ISR_OVF_PREFETCH_MEMRD_ERR_M << MMU_ISR_OVF_PREFETCH_MEMRD_ERR_SHIFT)
#define MMU_ISR_OVF_FLUSH_INVALID_TABLE_M 0x1ULL
#define MMU_ISR_OVF_FLUSH_INVALID_TABLE_SHIFT 3
#define MMU_ISR_OVF_FLUSH_INVALID_TABLE_MASK (MMU_ISR_OVF_FLUSH_INVALID_TABLE_M << MMU_ISR_OVF_FLUSH_INVALID_TABLE_SHIFT)
#define MMU_ERR_LOG 0x58
#define MMU_ERR_LOG_ID_M 0x7fULL
#define MMU_ERR_LOG_ID_SHIFT 31
#define MMU_ERR_LOG_ID_MASK (MMU_ERR_LOG_ID_M << MMU_ERR_LOG_ID_SHIFT)
#define MMU_ERR_LOG_VPAGEADDR_M 0x7fffffffULL
#define MMU_ERR_LOG_VPAGEADDR_SHIFT 0
#define MMU_ERR_LOG_VPAGEADDR_MASK (MMU_ERR_LOG_VPAGEADDR_M << MMU_ERR_LOG_VPAGEADDR_SHIFT)
#define MMU_ERR_LOG_RD_WR_N_M 0x1ULL
#define MMU_ERR_LOG_RD_WR_N_SHIFT 38
#define MMU_ERR_LOG_RD_WR_N_MASK (MMU_ERR_LOG_RD_WR_N_M << MMU_ERR_LOG_RD_WR_N_SHIFT)
#define BIF_AXI_CTRL_DMA0 0x80
#define BIF_AXI_CTRL_DMA0_CH0_AXCACHE_M 0xfULL
#define BIF_AXI_CTRL_DMA0_CH0_AXCACHE_SHIFT 0
#define BIF_AXI_CTRL_DMA0_CH0_AXCACHE_MASK (BIF_AXI_CTRL_DMA0_CH0_AXCACHE_M << BIF_AXI_CTRL_DMA0_CH0_AXCACHE_SHIFT)
#define BIF_AXI_CTRL_DMA0_CH0_AXPROT_M 0x7ULL
#define BIF_AXI_CTRL_DMA0_CH0_AXPROT_SHIFT 4
#define BIF_AXI_CTRL_DMA0_CH0_AXPROT_MASK (BIF_AXI_CTRL_DMA0_CH0_AXPROT_M << BIF_AXI_CTRL_DMA0_CH0_AXPROT_SHIFT)
#define BIF_AXI_CTRL_DMA0_CH1_AXPROT_M 0x7ULL
#define BIF_AXI_CTRL_DMA0_CH1_AXPROT_SHIFT 14
#define BIF_AXI_CTRL_DMA0_CH1_AXPROT_MASK (BIF_AXI_CTRL_DMA0_CH1_AXPROT_M << BIF_AXI_CTRL_DMA0_CH1_AXPROT_SHIFT)
#define BIF_AXI_CTRL_DMA0_CH2_AXCACHE_M 0xfULL
#define BIF_AXI_CTRL_DMA0_CH2_AXCACHE_SHIFT 20
#define BIF_AXI_CTRL_DMA0_CH2_AXCACHE_MASK (BIF_AXI_CTRL_DMA0_CH2_AXCACHE_M << BIF_AXI_CTRL_DMA0_CH2_AXCACHE_SHIFT)
#define BIF_AXI_CTRL_DMA0_CH2_AXPROT_M 0x7ULL
#define BIF_AXI_CTRL_DMA0_CH2_AXPROT_SHIFT 24
#define BIF_AXI_CTRL_DMA0_CH2_AXPROT_MASK (BIF_AXI_CTRL_DMA0_CH2_AXPROT_M << BIF_AXI_CTRL_DMA0_CH2_AXPROT_SHIFT)
#define BIF_AXI_CTRL_DMA0_CH1_AXCACHE_M 0xfULL
#define BIF_AXI_CTRL_DMA0_CH1_AXCACHE_SHIFT 10
#define BIF_AXI_CTRL_DMA0_CH1_AXCACHE_MASK (BIF_AXI_CTRL_DMA0_CH1_AXCACHE_M << BIF_AXI_CTRL_DMA0_CH1_AXCACHE_SHIFT)
#define BIF_AXI_CTRL_DMA1 0x88
#define BIF_AXI_CTRL_DMA1_CH5_AXPROT_M 0x7ULL
#define BIF_AXI_CTRL_DMA1_CH5_AXPROT_SHIFT 24
#define BIF_AXI_CTRL_DMA1_CH5_AXPROT_MASK (BIF_AXI_CTRL_DMA1_CH5_AXPROT_M << BIF_AXI_CTRL_DMA1_CH5_AXPROT_SHIFT)
#define BIF_AXI_CTRL_DMA1_CH4_AXCACHE_M 0xfULL
#define BIF_AXI_CTRL_DMA1_CH4_AXCACHE_SHIFT 10
#define BIF_AXI_CTRL_DMA1_CH4_AXCACHE_MASK (BIF_AXI_CTRL_DMA1_CH4_AXCACHE_M << BIF_AXI_CTRL_DMA1_CH4_AXCACHE_SHIFT)
#define BIF_AXI_CTRL_DMA1_CH5_AXCACHE_M 0xfULL
#define BIF_AXI_CTRL_DMA1_CH5_AXCACHE_SHIFT 20
#define BIF_AXI_CTRL_DMA1_CH5_AXCACHE_MASK (BIF_AXI_CTRL_DMA1_CH5_AXCACHE_M << BIF_AXI_CTRL_DMA1_CH5_AXCACHE_SHIFT)
#define BIF_AXI_CTRL_DMA1_CH4_AXPROT_M 0x7ULL
#define BIF_AXI_CTRL_DMA1_CH4_AXPROT_SHIFT 14
#define BIF_AXI_CTRL_DMA1_CH4_AXPROT_MASK (BIF_AXI_CTRL_DMA1_CH4_AXPROT_M << BIF_AXI_CTRL_DMA1_CH4_AXPROT_SHIFT)
#define BIF_AXI_CTRL_DMA1_CH3_AXCACHE_M 0xfULL
#define BIF_AXI_CTRL_DMA1_CH3_AXCACHE_SHIFT 0
#define BIF_AXI_CTRL_DMA1_CH3_AXCACHE_MASK (BIF_AXI_CTRL_DMA1_CH3_AXCACHE_M << BIF_AXI_CTRL_DMA1_CH3_AXCACHE_SHIFT)
#define BIF_AXI_CTRL_DMA1_CH3_AXPROT_M 0x7ULL
#define BIF_AXI_CTRL_DMA1_CH3_AXPROT_SHIFT 4
#define BIF_AXI_CTRL_DMA1_CH3_AXPROT_MASK (BIF_AXI_CTRL_DMA1_CH3_AXPROT_M << BIF_AXI_CTRL_DMA1_CH3_AXPROT_SHIFT)
#define BIF_AXI_CTRL_DMA2 0x90
#define BIF_AXI_CTRL_DMA2_CH6_AXPROT_M 0x7ULL
#define BIF_AXI_CTRL_DMA2_CH6_AXPROT_SHIFT 4
#define BIF_AXI_CTRL_DMA2_CH6_AXPROT_MASK (BIF_AXI_CTRL_DMA2_CH6_AXPROT_M << BIF_AXI_CTRL_DMA2_CH6_AXPROT_SHIFT)
#define BIF_AXI_CTRL_DMA2_CH7_AXPROT_M 0x7ULL
#define BIF_AXI_CTRL_DMA2_CH7_AXPROT_SHIFT 14
#define BIF_AXI_CTRL_DMA2_CH7_AXPROT_MASK (BIF_AXI_CTRL_DMA2_CH7_AXPROT_M << BIF_AXI_CTRL_DMA2_CH7_AXPROT_SHIFT)
#define BIF_AXI_CTRL_DMA2_CH6_AXCACHE_M 0xfULL
#define BIF_AXI_CTRL_DMA2_CH6_AXCACHE_SHIFT 0
#define BIF_AXI_CTRL_DMA2_CH6_AXCACHE_MASK (BIF_AXI_CTRL_DMA2_CH6_AXCACHE_M << BIF_AXI_CTRL_DMA2_CH6_AXCACHE_SHIFT)
#define BIF_AXI_CTRL_DMA2_CH8_AXCACHE_M 0xfULL
#define BIF_AXI_CTRL_DMA2_CH8_AXCACHE_SHIFT 20
#define BIF_AXI_CTRL_DMA2_CH8_AXCACHE_MASK (BIF_AXI_CTRL_DMA2_CH8_AXCACHE_M << BIF_AXI_CTRL_DMA2_CH8_AXCACHE_SHIFT)
#define BIF_AXI_CTRL_DMA2_CH8_AXPROT_M 0x7ULL
#define BIF_AXI_CTRL_DMA2_CH8_AXPROT_SHIFT 24
#define BIF_AXI_CTRL_DMA2_CH8_AXPROT_MASK (BIF_AXI_CTRL_DMA2_CH8_AXPROT_M << BIF_AXI_CTRL_DMA2_CH8_AXPROT_SHIFT)
#define BIF_AXI_CTRL_DMA2_CH7_AXCACHE_M 0xfULL
#define BIF_AXI_CTRL_DMA2_CH7_AXCACHE_SHIFT 10
#define BIF_AXI_CTRL_DMA2_CH7_AXCACHE_MASK (BIF_AXI_CTRL_DMA2_CH7_AXCACHE_M << BIF_AXI_CTRL_DMA2_CH7_AXCACHE_SHIFT)
#define BIF_AXI_CTRL_DMA3 0x98
#define BIF_AXI_CTRL_DMA3_CH11_AXPROT_M 0x7ULL
#define BIF_AXI_CTRL_DMA3_CH11_AXPROT_SHIFT 24
#define BIF_AXI_CTRL_DMA3_CH11_AXPROT_MASK (BIF_AXI_CTRL_DMA3_CH11_AXPROT_M << BIF_AXI_CTRL_DMA3_CH11_AXPROT_SHIFT)
#define BIF_AXI_CTRL_DMA3_CH11_AXCACHE_M 0xfULL
#define BIF_AXI_CTRL_DMA3_CH11_AXCACHE_SHIFT 20
#define BIF_AXI_CTRL_DMA3_CH11_AXCACHE_MASK (BIF_AXI_CTRL_DMA3_CH11_AXCACHE_M << BIF_AXI_CTRL_DMA3_CH11_AXCACHE_SHIFT)
#define BIF_AXI_CTRL_DMA3_CH10_AXCACHE_M 0xfULL
#define BIF_AXI_CTRL_DMA3_CH10_AXCACHE_SHIFT 10
#define BIF_AXI_CTRL_DMA3_CH10_AXCACHE_MASK (BIF_AXI_CTRL_DMA3_CH10_AXCACHE_M << BIF_AXI_CTRL_DMA3_CH10_AXCACHE_SHIFT)
#define BIF_AXI_CTRL_DMA3_CH10_AXPROT_M 0x7ULL
#define BIF_AXI_CTRL_DMA3_CH10_AXPROT_SHIFT 14
#define BIF_AXI_CTRL_DMA3_CH10_AXPROT_MASK (BIF_AXI_CTRL_DMA3_CH10_AXPROT_M << BIF_AXI_CTRL_DMA3_CH10_AXPROT_SHIFT)
#define BIF_AXI_CTRL_DMA3_CH9_AXCACHE_M 0xfULL
#define BIF_AXI_CTRL_DMA3_CH9_AXCACHE_SHIFT 0
#define BIF_AXI_CTRL_DMA3_CH9_AXCACHE_MASK (BIF_AXI_CTRL_DMA3_CH9_AXCACHE_M << BIF_AXI_CTRL_DMA3_CH9_AXCACHE_SHIFT)
#define BIF_AXI_CTRL_DMA3_CH9_AXPROT_M 0x7ULL
#define BIF_AXI_CTRL_DMA3_CH9_AXPROT_SHIFT 4
#define BIF_AXI_CTRL_DMA3_CH9_AXPROT_MASK (BIF_AXI_CTRL_DMA3_CH9_AXPROT_M << BIF_AXI_CTRL_DMA3_CH9_AXPROT_SHIFT)
#define BIF_AXI_CTRL_DMA4 0xa0
#define BIF_AXI_CTRL_DMA4_CH12_AXCACHE_M 0xfULL
#define BIF_AXI_CTRL_DMA4_CH12_AXCACHE_SHIFT 0
#define BIF_AXI_CTRL_DMA4_CH12_AXCACHE_MASK (BIF_AXI_CTRL_DMA4_CH12_AXCACHE_M << BIF_AXI_CTRL_DMA4_CH12_AXCACHE_SHIFT)
#define BIF_AXI_CTRL_DMA4_CH13_AXPROT_M 0x7ULL
#define BIF_AXI_CTRL_DMA4_CH13_AXPROT_SHIFT 14
#define BIF_AXI_CTRL_DMA4_CH13_AXPROT_MASK (BIF_AXI_CTRL_DMA4_CH13_AXPROT_M << BIF_AXI_CTRL_DMA4_CH13_AXPROT_SHIFT)
#define BIF_AXI_CTRL_DMA4_CH14_AXCACHE_M 0xfULL
#define BIF_AXI_CTRL_DMA4_CH14_AXCACHE_SHIFT 20
#define BIF_AXI_CTRL_DMA4_CH14_AXCACHE_MASK (BIF_AXI_CTRL_DMA4_CH14_AXCACHE_M << BIF_AXI_CTRL_DMA4_CH14_AXCACHE_SHIFT)
#define BIF_AXI_CTRL_DMA4_CH13_AXCACHE_M 0xfULL
#define BIF_AXI_CTRL_DMA4_CH13_AXCACHE_SHIFT 10
#define BIF_AXI_CTRL_DMA4_CH13_AXCACHE_MASK (BIF_AXI_CTRL_DMA4_CH13_AXCACHE_M << BIF_AXI_CTRL_DMA4_CH13_AXCACHE_SHIFT)
#define BIF_AXI_CTRL_DMA4_CH12_AXPROT_M 0x7ULL
#define BIF_AXI_CTRL_DMA4_CH12_AXPROT_SHIFT 4
#define BIF_AXI_CTRL_DMA4_CH12_AXPROT_MASK (BIF_AXI_CTRL_DMA4_CH12_AXPROT_M << BIF_AXI_CTRL_DMA4_CH12_AXPROT_SHIFT)
#define BIF_AXI_CTRL_DMA4_CH14_AXPROT_M 0x7ULL
#define BIF_AXI_CTRL_DMA4_CH14_AXPROT_SHIFT 24
#define BIF_AXI_CTRL_DMA4_CH14_AXPROT_MASK (BIF_AXI_CTRL_DMA4_CH14_AXPROT_M << BIF_AXI_CTRL_DMA4_CH14_AXPROT_SHIFT)
#define BIF_AXI_CTRL_DMA5 0xa8
#define BIF_AXI_CTRL_DMA5_CH15_AXPROT_M 0x7ULL
#define BIF_AXI_CTRL_DMA5_CH15_AXPROT_SHIFT 4
#define BIF_AXI_CTRL_DMA5_CH15_AXPROT_MASK (BIF_AXI_CTRL_DMA5_CH15_AXPROT_M << BIF_AXI_CTRL_DMA5_CH15_AXPROT_SHIFT)
#define BIF_AXI_CTRL_DMA5_CH15_AXCACHE_M 0xfULL
#define BIF_AXI_CTRL_DMA5_CH15_AXCACHE_SHIFT 0
#define BIF_AXI_CTRL_DMA5_CH15_AXCACHE_MASK (BIF_AXI_CTRL_DMA5_CH15_AXCACHE_M << BIF_AXI_CTRL_DMA5_CH15_AXCACHE_SHIFT)
#define BIF_AXI_CTRL_MMU 0xb0
#define BIF_AXI_CTRL_MMU_AXPROT_M 0x7ULL
#define BIF_AXI_CTRL_MMU_AXPROT_SHIFT 4
#define BIF_AXI_CTRL_MMU_AXPROT_MASK (BIF_AXI_CTRL_MMU_AXPROT_M << BIF_AXI_CTRL_MMU_AXPROT_SHIFT)
#define BIF_AXI_CTRL_MMU_AXCACHE_M 0xfULL
#define BIF_AXI_CTRL_MMU_AXCACHE_SHIFT 0
#define BIF_AXI_CTRL_MMU_AXCACHE_MASK (BIF_AXI_CTRL_MMU_AXCACHE_M << BIF_AXI_CTRL_MMU_AXCACHE_SHIFT)
#define BIF_IMR 0xb8
#define BIF_IMR_TO_ERR_MMU_RD_M 0x1ULL
#define BIF_IMR_TO_ERR_MMU_RD_SHIFT 4
#define BIF_IMR_TO_ERR_MMU_RD_MASK (BIF_IMR_TO_ERR_MMU_RD_M << BIF_IMR_TO_ERR_MMU_RD_SHIFT)
#define BIF_IMR_TO_ERR_DMA_WR_M 0x1ULL
#define BIF_IMR_TO_ERR_DMA_WR_SHIFT 3
#define BIF_IMR_TO_ERR_DMA_WR_MASK (BIF_IMR_TO_ERR_DMA_WR_M << BIF_IMR_TO_ERR_DMA_WR_SHIFT)
#define BIF_IMR_BUS_ERR_MMU_M 0x1ULL
#define BIF_IMR_BUS_ERR_MMU_SHIFT 1
#define BIF_IMR_BUS_ERR_MMU_MASK (BIF_IMR_BUS_ERR_MMU_M << BIF_IMR_BUS_ERR_MMU_SHIFT)
#define BIF_IMR_BUS_ERR_DMA_M 0x1ULL
#define BIF_IMR_BUS_ERR_DMA_SHIFT 0
#define BIF_IMR_BUS_ERR_DMA_MASK (BIF_IMR_BUS_ERR_DMA_M << BIF_IMR_BUS_ERR_DMA_SHIFT)
#define BIF_IMR_TO_ERR_DMA_RD_M 0x1ULL
#define BIF_IMR_TO_ERR_DMA_RD_SHIFT 2
#define BIF_IMR_TO_ERR_DMA_RD_MASK (BIF_IMR_TO_ERR_DMA_RD_M << BIF_IMR_TO_ERR_DMA_RD_SHIFT)
#define BIF_ISR 0xc0
#define BIF_ISR_TO_ERR_DMA_WR_M 0x1ULL
#define BIF_ISR_TO_ERR_DMA_WR_SHIFT 4
#define BIF_ISR_TO_ERR_DMA_WR_MASK (BIF_ISR_TO_ERR_DMA_WR_M << BIF_ISR_TO_ERR_DMA_WR_SHIFT)
#define BIF_ISR_TO_ERR_DMA_RD_M 0x1ULL
#define BIF_ISR_TO_ERR_DMA_RD_SHIFT 2
#define BIF_ISR_TO_ERR_DMA_RD_MASK (BIF_ISR_TO_ERR_DMA_RD_M << BIF_ISR_TO_ERR_DMA_RD_SHIFT)
#define BIF_ISR_TO_ERR_MMU_RD_M 0x1ULL
#define BIF_ISR_TO_ERR_MMU_RD_SHIFT 3
#define BIF_ISR_TO_ERR_MMU_RD_MASK (BIF_ISR_TO_ERR_MMU_RD_M << BIF_ISR_TO_ERR_MMU_RD_SHIFT)
#define BIF_ISR_BUS_ERR_MMU_M 0x1ULL
#define BIF_ISR_BUS_ERR_MMU_SHIFT 1
#define BIF_ISR_BUS_ERR_MMU_MASK (BIF_ISR_BUS_ERR_MMU_M << BIF_ISR_BUS_ERR_MMU_SHIFT)
#define BIF_ISR_BUS_ERR_DMA_M 0x1ULL
#define BIF_ISR_BUS_ERR_DMA_SHIFT 0
#define BIF_ISR_BUS_ERR_DMA_MASK (BIF_ISR_BUS_ERR_DMA_M << BIF_ISR_BUS_ERR_DMA_SHIFT)
#define BIF_ISR_OVF 0xc8
#define BIF_ISR_OVF_BUS_ERR_MMU_M 0x1ULL
#define BIF_ISR_OVF_BUS_ERR_MMU_SHIFT 1
#define BIF_ISR_OVF_BUS_ERR_MMU_MASK (BIF_ISR_OVF_BUS_ERR_MMU_M << BIF_ISR_OVF_BUS_ERR_MMU_SHIFT)
#define BIF_ISR_OVF_BUS_ERR_DMA_M 0x1ULL
#define BIF_ISR_OVF_BUS_ERR_DMA_SHIFT 0
#define BIF_ISR_OVF_BUS_ERR_DMA_MASK (BIF_ISR_OVF_BUS_ERR_DMA_M << BIF_ISR_OVF_BUS_ERR_DMA_SHIFT)
#define BIF_ISR_OVF_TO_ERR_DMA_RD_M 0x1ULL
#define BIF_ISR_OVF_TO_ERR_DMA_RD_SHIFT 2
#define BIF_ISR_OVF_TO_ERR_DMA_RD_MASK (BIF_ISR_OVF_TO_ERR_DMA_RD_M << BIF_ISR_OVF_TO_ERR_DMA_RD_SHIFT)
#define BIF_ISR_OVF_TO_ERR_MMU_RD_M 0x1ULL
#define BIF_ISR_OVF_TO_ERR_MMU_RD_SHIFT 3
#define BIF_ISR_OVF_TO_ERR_MMU_RD_MASK (BIF_ISR_OVF_TO_ERR_MMU_RD_M << BIF_ISR_OVF_TO_ERR_MMU_RD_SHIFT)
#define BIF_ISR_OVF_TO_ERR_DMA_WR_M 0x1ULL
#define BIF_ISR_OVF_TO_ERR_DMA_WR_SHIFT 4
#define BIF_ISR_OVF_TO_ERR_DMA_WR_MASK (BIF_ISR_OVF_TO_ERR_DMA_WR_M << BIF_ISR_OVF_TO_ERR_DMA_WR_SHIFT)
#define BIF_TO_ERR_CFG 0xd0
#define BIF_TO_ERR_CFG_TIMEOUT_PRESCALE_M 0x1fULL
#define BIF_TO_ERR_CFG_TIMEOUT_PRESCALE_SHIFT 16
#define BIF_TO_ERR_CFG_TIMEOUT_PRESCALE_MASK (BIF_TO_ERR_CFG_TIMEOUT_PRESCALE_M << BIF_TO_ERR_CFG_TIMEOUT_PRESCALE_SHIFT)
#define BIF_ERR_LOG 0xd8
#define BIF_ERR_LOG_BUS_ERR_DMA_WRITE_M 0x1ULL
#define BIF_ERR_LOG_BUS_ERR_DMA_WRITE_SHIFT 0
#define BIF_ERR_LOG_BUS_ERR_DMA_WRITE_MASK (BIF_ERR_LOG_BUS_ERR_DMA_WRITE_M << BIF_ERR_LOG_BUS_ERR_DMA_WRITE_SHIFT)
#define BIF_ERR_LOG_TO_ERR_DMA_WR_TX_EMPTY_M 0x1ULL
#define BIF_ERR_LOG_TO_ERR_DMA_WR_TX_EMPTY_SHIFT 40
#define BIF_ERR_LOG_TO_ERR_DMA_WR_TX_EMPTY_MASK (BIF_ERR_LOG_TO_ERR_DMA_WR_TX_EMPTY_M << BIF_ERR_LOG_TO_ERR_DMA_WR_TX_EMPTY_SHIFT)
#define BIF_ERR_LOG_TO_ERR_DMA_WR_WPULL_EMPTY_M 0x1ULL
#define BIF_ERR_LOG_TO_ERR_DMA_WR_WPULL_EMPTY_SHIFT 37
#define BIF_ERR_LOG_TO_ERR_DMA_WR_WPULL_EMPTY_MASK (BIF_ERR_LOG_TO_ERR_DMA_WR_WPULL_EMPTY_M << BIF_ERR_LOG_TO_ERR_DMA_WR_WPULL_EMPTY_SHIFT)
#define BIF_ERR_LOG_TO_ERR_WID_EMPTY_M 0x1ULL
#define BIF_ERR_LOG_TO_ERR_WID_EMPTY_SHIFT 44
#define BIF_ERR_LOG_TO_ERR_WID_EMPTY_MASK (BIF_ERR_LOG_TO_ERR_WID_EMPTY_M << BIF_ERR_LOG_TO_ERR_WID_EMPTY_SHIFT)
#define BIF_ERR_LOG_BUS_ERR_DMA_WR_ID_M 0x3fULL
#define BIF_ERR_LOG_BUS_ERR_DMA_WR_ID_SHIFT 8
#define BIF_ERR_LOG_BUS_ERR_DMA_WR_ID_MASK (BIF_ERR_LOG_BUS_ERR_DMA_WR_ID_M << BIF_ERR_LOG_BUS_ERR_DMA_WR_ID_SHIFT)
#define BIF_ERR_LOG_TO_ERR_RID_EMPTY_M 0x1ULL
#define BIF_ERR_LOG_TO_ERR_RID_EMPTY_SHIFT 43
#define BIF_ERR_LOG_TO_ERR_RID_EMPTY_MASK (BIF_ERR_LOG_TO_ERR_RID_EMPTY_M << BIF_ERR_LOG_TO_ERR_RID_EMPTY_SHIFT)
#define BIF_ERR_LOG_TO_ERR_MMU_RD_OUT_EMPTY_M 0x1ULL
#define BIF_ERR_LOG_TO_ERR_MMU_RD_OUT_EMPTY_SHIFT 42
#define BIF_ERR_LOG_TO_ERR_MMU_RD_OUT_EMPTY_MASK (BIF_ERR_LOG_TO_ERR_MMU_RD_OUT_EMPTY_M << BIF_ERR_LOG_TO_ERR_MMU_RD_OUT_EMPTY_SHIFT)
#define BIF_ERR_LOG_BUS_ERR_AXI_ID_M 0x7fULL
#define BIF_ERR_LOG_BUS_ERR_AXI_ID_SHIFT 1
#define BIF_ERR_LOG_BUS_ERR_AXI_ID_MASK (BIF_ERR_LOG_BUS_ERR_AXI_ID_M << BIF_ERR_LOG_BUS_ERR_AXI_ID_SHIFT)
#define BIF_ERR_LOG_TO_ERR_DMA_WR_WDATA_EMPTY_M 0x1ULL
#define BIF_ERR_LOG_TO_ERR_DMA_WR_WDATA_EMPTY_SHIFT 39
#define BIF_ERR_LOG_TO_ERR_DMA_WR_WDATA_EMPTY_MASK (BIF_ERR_LOG_TO_ERR_DMA_WR_WDATA_EMPTY_M << BIF_ERR_LOG_TO_ERR_DMA_WR_WDATA_EMPTY_SHIFT)
#define BIF_ERR_LOG_TO_ERR_DMA_RD_TX_EMPTY_M 0x1ULL
#define BIF_ERR_LOG_TO_ERR_DMA_RD_TX_EMPTY_SHIFT 32
#define BIF_ERR_LOG_TO_ERR_DMA_RD_TX_EMPTY_MASK (BIF_ERR_LOG_TO_ERR_DMA_RD_TX_EMPTY_M << BIF_ERR_LOG_TO_ERR_DMA_RD_TX_EMPTY_SHIFT)
#define BIF_ERR_LOG_TO_ERR_DMA_WR_WACK_EMPTY_M 0x1ULL
#define BIF_ERR_LOG_TO_ERR_DMA_WR_WACK_EMPTY_SHIFT 38
#define BIF_ERR_LOG_TO_ERR_DMA_WR_WACK_EMPTY_MASK (BIF_ERR_LOG_TO_ERR_DMA_WR_WACK_EMPTY_M << BIF_ERR_LOG_TO_ERR_DMA_WR_WACK_EMPTY_SHIFT)
#define BIF_ERR_LOG_TO_ERR_MMU_RD_RX_EMPTY_M 0x1ULL
#define BIF_ERR_LOG_TO_ERR_MMU_RD_RX_EMPTY_SHIFT 41
#define BIF_ERR_LOG_TO_ERR_MMU_RD_RX_EMPTY_MASK (BIF_ERR_LOG_TO_ERR_MMU_RD_RX_EMPTY_M << BIF_ERR_LOG_TO_ERR_MMU_RD_RX_EMPTY_SHIFT)
#define BIF_ERR_LOG_TO_ERR_DMA_RD_RX_EMPTY_M 0x1ULL
#define BIF_ERR_LOG_TO_ERR_DMA_RD_RX_EMPTY_SHIFT 33
#define BIF_ERR_LOG_TO_ERR_DMA_RD_RX_EMPTY_MASK (BIF_ERR_LOG_TO_ERR_DMA_RD_RX_EMPTY_M << BIF_ERR_LOG_TO_ERR_DMA_RD_RX_EMPTY_SHIFT)
#define BIF_ERR_LOG_TO_ERR_DMA_RD_IN_EMPTY_M 0x1ULL
#define BIF_ERR_LOG_TO_ERR_DMA_RD_IN_EMPTY_SHIFT 34
#define BIF_ERR_LOG_TO_ERR_DMA_RD_IN_EMPTY_MASK (BIF_ERR_LOG_TO_ERR_DMA_RD_IN_EMPTY_M << BIF_ERR_LOG_TO_ERR_DMA_RD_IN_EMPTY_SHIFT)
#define BIF_ERR_LOG_TO_ERR_DMA_RD_OUT_EMPTY_M 0x1ULL
#define BIF_ERR_LOG_TO_ERR_DMA_RD_OUT_EMPTY_SHIFT 35
#define BIF_ERR_LOG_TO_ERR_DMA_RD_OUT_EMPTY_MASK (BIF_ERR_LOG_TO_ERR_DMA_RD_OUT_EMPTY_M << BIF_ERR_LOG_TO_ERR_DMA_RD_OUT_EMPTY_SHIFT)
#define BIF_ERR_LOG_BUS_ERR_DMA_CHAN_M 0xfULL
#define BIF_ERR_LOG_BUS_ERR_DMA_CHAN_SHIFT 14
#define BIF_ERR_LOG_BUS_ERR_DMA_CHAN_MASK (BIF_ERR_LOG_BUS_ERR_DMA_CHAN_M << BIF_ERR_LOG_BUS_ERR_DMA_CHAN_SHIFT)
#define BIF_ERR_LOG_TO_ERR_DMA_WR_IN_EMPTY_M 0x1ULL
#define BIF_ERR_LOG_TO_ERR_DMA_WR_IN_EMPTY_SHIFT 36
#define BIF_ERR_LOG_TO_ERR_DMA_WR_IN_EMPTY_MASK (BIF_ERR_LOG_TO_ERR_DMA_WR_IN_EMPTY_M << BIF_ERR_LOG_TO_ERR_DMA_WR_IN_EMPTY_SHIFT)
#define BIF_ERR_LOG_BUS_ADDR 0xe0
#define BIF_ERR_LOG_BUS_ADDR_PADDR_M 0xffffffffULL
#define BIF_ERR_LOG_BUS_ADDR_PADDR_SHIFT 0
#define BIF_ERR_LOG_BUS_ADDR_PADDR_MASK (BIF_ERR_LOG_BUS_ADDR_PADDR_M << BIF_ERR_LOG_BUS_ADDR_PADDR_SHIFT)
#define BIF_PMON_CFG 0x100
#define BIF_PMON_CFG_ENABLE_M 0x1ULL
#define BIF_PMON_CFG_ENABLE_SHIFT 0
#define BIF_PMON_CFG_ENABLE_MASK (BIF_PMON_CFG_ENABLE_M << BIF_PMON_CFG_ENABLE_SHIFT)
#define BIF_PMON_CNT_0_CFG 0x108
#define BIF_PMON_CNT_0_CFG_MODE_M 0x7ULL
#define BIF_PMON_CNT_0_CFG_MODE_SHIFT 0
#define BIF_PMON_CNT_0_CFG_MODE_MASK (BIF_PMON_CNT_0_CFG_MODE_M << BIF_PMON_CNT_0_CFG_MODE_SHIFT)
#define BIF_PMON_CNT_0_CFG_DEC_MASK_M 0xfULL
#define BIF_PMON_CNT_0_CFG_DEC_MASK_SHIFT 55
#define BIF_PMON_CNT_0_CFG_DEC_MASK_MASK (BIF_PMON_CNT_0_CFG_DEC_MASK_M << BIF_PMON_CNT_0_CFG_DEC_MASK_SHIFT)
#define BIF_PMON_CNT_0_CFG_INC_INV_M 0x1ULL
#define BIF_PMON_CNT_0_CFG_INC_INV_SHIFT 47
#define BIF_PMON_CNT_0_CFG_INC_INV_MASK (BIF_PMON_CNT_0_CFG_INC_INV_M << BIF_PMON_CNT_0_CFG_INC_INV_SHIFT)
#define BIF_PMON_CNT_0_CFG_INC_MASK_M 0xfULL
#define BIF_PMON_CNT_0_CFG_INC_MASK_SHIFT 39
#define BIF_PMON_CNT_0_CFG_INC_MASK_MASK (BIF_PMON_CNT_0_CFG_INC_MASK_M << BIF_PMON_CNT_0_CFG_INC_MASK_SHIFT)
#define BIF_PMON_CNT_0_CFG_INC_MATCH_M 0xfULL
#define BIF_PMON_CNT_0_CFG_INC_MATCH_SHIFT 43
#define BIF_PMON_CNT_0_CFG_INC_MATCH_MASK (BIF_PMON_CNT_0_CFG_INC_MATCH_M << BIF_PMON_CNT_0_CFG_INC_MATCH_SHIFT)
#define BIF_PMON_CNT_0_CFG_DEC_SEL_M 0xfULL
#define BIF_PMON_CNT_0_CFG_DEC_SEL_SHIFT 48
#define BIF_PMON_CNT_0_CFG_DEC_SEL_MASK (BIF_PMON_CNT_0_CFG_DEC_SEL_M << BIF_PMON_CNT_0_CFG_DEC_SEL_SHIFT)
#define BIF_PMON_CNT_0_CFG_DEC_INV_M 0x1ULL
#define BIF_PMON_CNT_0_CFG_DEC_INV_SHIFT 63
#define BIF_PMON_CNT_0_CFG_DEC_INV_MASK (BIF_PMON_CNT_0_CFG_DEC_INV_M << BIF_PMON_CNT_0_CFG_DEC_INV_SHIFT)
#define BIF_PMON_CNT_0_CFG_THRESHOLD_M 0xffULL
#define BIF_PMON_CNT_0_CFG_THRESHOLD_SHIFT 3
#define BIF_PMON_CNT_0_CFG_THRESHOLD_MASK (BIF_PMON_CNT_0_CFG_THRESHOLD_M << BIF_PMON_CNT_0_CFG_THRESHOLD_SHIFT)
#define BIF_PMON_CNT_0_CFG_INC_SEL_M 0xfULL
#define BIF_PMON_CNT_0_CFG_INC_SEL_SHIFT 32
#define BIF_PMON_CNT_0_CFG_INC_SEL_MASK (BIF_PMON_CNT_0_CFG_INC_SEL_M << BIF_PMON_CNT_0_CFG_INC_SEL_SHIFT)
#define BIF_PMON_CNT_0_CFG_DEC_MATCH_M 0xfULL
#define BIF_PMON_CNT_0_CFG_DEC_MATCH_SHIFT 59
#define BIF_PMON_CNT_0_CFG_DEC_MATCH_MASK (BIF_PMON_CNT_0_CFG_DEC_MATCH_M << BIF_PMON_CNT_0_CFG_DEC_MATCH_SHIFT)
#define BIF_PMON_CNT_0 0x110
#define BIF_PMON_CNT_0_CNT_M 0xffffffffffULL
#define BIF_PMON_CNT_0_CNT_SHIFT 0
#define BIF_PMON_CNT_0_CNT_MASK (BIF_PMON_CNT_0_CNT_M << BIF_PMON_CNT_0_CNT_SHIFT)
#define BIF_PMON_CNT_0_STS_ACC 0x118
#define BIF_PMON_CNT_0_STS 0x120
#define BIF_PMON_CNT_0_STS_CNT_OF_M 0x1ULL
#define BIF_PMON_CNT_0_STS_CNT_OF_SHIFT 2
#define BIF_PMON_CNT_0_STS_CNT_OF_MASK (BIF_PMON_CNT_0_STS_CNT_OF_M << BIF_PMON_CNT_0_STS_CNT_OF_SHIFT)
#define BIF_PMON_CNT_0_STS_ACC_UF_M 0x1ULL
#define BIF_PMON_CNT_0_STS_ACC_UF_SHIFT 1
#define BIF_PMON_CNT_0_STS_ACC_UF_MASK (BIF_PMON_CNT_0_STS_ACC_UF_M << BIF_PMON_CNT_0_STS_ACC_UF_SHIFT)
#define BIF_PMON_CNT_0_STS_ACC_OF_M 0x1ULL
#define BIF_PMON_CNT_0_STS_ACC_OF_SHIFT 0
#define BIF_PMON_CNT_0_STS_ACC_OF_MASK (BIF_PMON_CNT_0_STS_ACC_OF_M << BIF_PMON_CNT_0_STS_ACC_OF_SHIFT)
#define BIF_PMON_CNT_1_CFG 0x128
#define BIF_PMON_CNT_1_CFG_INC_MATCH_M 0xfULL
#define BIF_PMON_CNT_1_CFG_INC_MATCH_SHIFT 43
#define BIF_PMON_CNT_1_CFG_INC_MATCH_MASK (BIF_PMON_CNT_1_CFG_INC_MATCH_M << BIF_PMON_CNT_1_CFG_INC_MATCH_SHIFT)
#define BIF_PMON_CNT_1_CFG_INC_SEL_M 0xfULL
#define BIF_PMON_CNT_1_CFG_INC_SEL_SHIFT 32
#define BIF_PMON_CNT_1_CFG_INC_SEL_MASK (BIF_PMON_CNT_1_CFG_INC_SEL_M << BIF_PMON_CNT_1_CFG_INC_SEL_SHIFT)
#define BIF_PMON_CNT_1_CFG_DEC_SEL_M 0xfULL
#define BIF_PMON_CNT_1_CFG_DEC_SEL_SHIFT 48
#define BIF_PMON_CNT_1_CFG_DEC_SEL_MASK (BIF_PMON_CNT_1_CFG_DEC_SEL_M << BIF_PMON_CNT_1_CFG_DEC_SEL_SHIFT)
#define BIF_PMON_CNT_1_CFG_THRESHOLD_M 0xffULL
#define BIF_PMON_CNT_1_CFG_THRESHOLD_SHIFT 3
#define BIF_PMON_CNT_1_CFG_THRESHOLD_MASK (BIF_PMON_CNT_1_CFG_THRESHOLD_M << BIF_PMON_CNT_1_CFG_THRESHOLD_SHIFT)
#define BIF_PMON_CNT_1_CFG_INC_INV_M 0x1ULL
#define BIF_PMON_CNT_1_CFG_INC_INV_SHIFT 47
#define BIF_PMON_CNT_1_CFG_INC_INV_MASK (BIF_PMON_CNT_1_CFG_INC_INV_M << BIF_PMON_CNT_1_CFG_INC_INV_SHIFT)
#define BIF_PMON_CNT_1_CFG_DEC_MASK_M 0xfULL
#define BIF_PMON_CNT_1_CFG_DEC_MASK_SHIFT 55
#define BIF_PMON_CNT_1_CFG_DEC_MASK_MASK (BIF_PMON_CNT_1_CFG_DEC_MASK_M << BIF_PMON_CNT_1_CFG_DEC_MASK_SHIFT)
#define BIF_PMON_CNT_1_CFG_MODE_M 0x7ULL
#define BIF_PMON_CNT_1_CFG_MODE_SHIFT 0
#define BIF_PMON_CNT_1_CFG_MODE_MASK (BIF_PMON_CNT_1_CFG_MODE_M << BIF_PMON_CNT_1_CFG_MODE_SHIFT)
#define BIF_PMON_CNT_1_CFG_DEC_INV_M 0x1ULL
#define BIF_PMON_CNT_1_CFG_DEC_INV_SHIFT 63
#define BIF_PMON_CNT_1_CFG_DEC_INV_MASK (BIF_PMON_CNT_1_CFG_DEC_INV_M << BIF_PMON_CNT_1_CFG_DEC_INV_SHIFT)
#define BIF_PMON_CNT_1_CFG_DEC_MATCH_M 0xfULL
#define BIF_PMON_CNT_1_CFG_DEC_MATCH_SHIFT 59
#define BIF_PMON_CNT_1_CFG_DEC_MATCH_MASK (BIF_PMON_CNT_1_CFG_DEC_MATCH_M << BIF_PMON_CNT_1_CFG_DEC_MATCH_SHIFT)
#define BIF_PMON_CNT_1_CFG_INC_MASK_M 0xfULL
#define BIF_PMON_CNT_1_CFG_INC_MASK_SHIFT 39
#define BIF_PMON_CNT_1_CFG_INC_MASK_MASK (BIF_PMON_CNT_1_CFG_INC_MASK_M << BIF_PMON_CNT_1_CFG_INC_MASK_SHIFT)
#define BIF_PMON_CNT_1 0x130
#define BIF_PMON_CNT_1_CNT_M 0xffffffffffULL
#define BIF_PMON_CNT_1_CNT_SHIFT 0
#define BIF_PMON_CNT_1_CNT_MASK (BIF_PMON_CNT_1_CNT_M << BIF_PMON_CNT_1_CNT_SHIFT)
#define BIF_PMON_CNT_1_STS_ACC 0x138
#define BIF_PMON_CNT_1_STS 0x140
#define BIF_PMON_CNT_1_STS_ACC_UF_M 0x1ULL
#define BIF_PMON_CNT_1_STS_ACC_UF_SHIFT 1
#define BIF_PMON_CNT_1_STS_ACC_UF_MASK (BIF_PMON_CNT_1_STS_ACC_UF_M << BIF_PMON_CNT_1_STS_ACC_UF_SHIFT)
#define BIF_PMON_CNT_1_STS_ACC_OF_M 0x1ULL
#define BIF_PMON_CNT_1_STS_ACC_OF_SHIFT 0
#define BIF_PMON_CNT_1_STS_ACC_OF_MASK (BIF_PMON_CNT_1_STS_ACC_OF_M << BIF_PMON_CNT_1_STS_ACC_OF_SHIFT)
#define BIF_PMON_CNT_1_STS_CNT_OF_M 0x1ULL
#define BIF_PMON_CNT_1_STS_CNT_OF_SHIFT 2
#define BIF_PMON_CNT_1_STS_CNT_OF_MASK (BIF_PMON_CNT_1_STS_CNT_OF_M << BIF_PMON_CNT_1_STS_CNT_OF_SHIFT)
#define MMU_PMON_CFG 0x1c0
#define MMU_PMON_CFG_ENABLE_M 0x1ULL
#define MMU_PMON_CFG_ENABLE_SHIFT 0
#define MMU_PMON_CFG_ENABLE_MASK (MMU_PMON_CFG_ENABLE_M << MMU_PMON_CFG_ENABLE_SHIFT)
#define MMU_PMON_CNT_0_CFG 0x1c8
#define MMU_PMON_CNT_0_CFG_THRESHOLD_M 0xffULL
#define MMU_PMON_CNT_0_CFG_THRESHOLD_SHIFT 3
#define MMU_PMON_CNT_0_CFG_THRESHOLD_MASK (MMU_PMON_CNT_0_CFG_THRESHOLD_M << MMU_PMON_CNT_0_CFG_THRESHOLD_SHIFT)
#define MMU_PMON_CNT_0_CFG_INC_MATCH_M 0xfULL
#define MMU_PMON_CNT_0_CFG_INC_MATCH_SHIFT 43
#define MMU_PMON_CNT_0_CFG_INC_MATCH_MASK (MMU_PMON_CNT_0_CFG_INC_MATCH_M << MMU_PMON_CNT_0_CFG_INC_MATCH_SHIFT)
#define MMU_PMON_CNT_0_CFG_DEC_INV_M 0x1ULL
#define MMU_PMON_CNT_0_CFG_DEC_INV_SHIFT 63
#define MMU_PMON_CNT_0_CFG_DEC_INV_MASK (MMU_PMON_CNT_0_CFG_DEC_INV_M << MMU_PMON_CNT_0_CFG_DEC_INV_SHIFT)
#define MMU_PMON_CNT_0_CFG_DEC_MATCH_M 0xfULL
#define MMU_PMON_CNT_0_CFG_DEC_MATCH_SHIFT 59
#define MMU_PMON_CNT_0_CFG_DEC_MATCH_MASK (MMU_PMON_CNT_0_CFG_DEC_MATCH_M << MMU_PMON_CNT_0_CFG_DEC_MATCH_SHIFT)
#define MMU_PMON_CNT_0_CFG_MODE_M 0x7ULL
#define MMU_PMON_CNT_0_CFG_MODE_SHIFT 0
#define MMU_PMON_CNT_0_CFG_MODE_MASK (MMU_PMON_CNT_0_CFG_MODE_M << MMU_PMON_CNT_0_CFG_MODE_SHIFT)
#define MMU_PMON_CNT_0_CFG_INC_INV_M 0x1ULL
#define MMU_PMON_CNT_0_CFG_INC_INV_SHIFT 47
#define MMU_PMON_CNT_0_CFG_INC_INV_MASK (MMU_PMON_CNT_0_CFG_INC_INV_M << MMU_PMON_CNT_0_CFG_INC_INV_SHIFT)
#define MMU_PMON_CNT_0_CFG_INC_SEL_M 0x1fULL
#define MMU_PMON_CNT_0_CFG_INC_SEL_SHIFT 32
#define MMU_PMON_CNT_0_CFG_INC_SEL_MASK (MMU_PMON_CNT_0_CFG_INC_SEL_M << MMU_PMON_CNT_0_CFG_INC_SEL_SHIFT)
#define MMU_PMON_CNT_0_CFG_INC_MASK_M 0xfULL
#define MMU_PMON_CNT_0_CFG_INC_MASK_SHIFT 39
#define MMU_PMON_CNT_0_CFG_INC_MASK_MASK (MMU_PMON_CNT_0_CFG_INC_MASK_M << MMU_PMON_CNT_0_CFG_INC_MASK_SHIFT)
#define MMU_PMON_CNT_0_CFG_DEC_SEL_M 0x1fULL
#define MMU_PMON_CNT_0_CFG_DEC_SEL_SHIFT 48
#define MMU_PMON_CNT_0_CFG_DEC_SEL_MASK (MMU_PMON_CNT_0_CFG_DEC_SEL_M << MMU_PMON_CNT_0_CFG_DEC_SEL_SHIFT)
#define MMU_PMON_CNT_0_CFG_DEC_MASK_M 0xfULL
#define MMU_PMON_CNT_0_CFG_DEC_MASK_SHIFT 55
#define MMU_PMON_CNT_0_CFG_DEC_MASK_MASK (MMU_PMON_CNT_0_CFG_DEC_MASK_M << MMU_PMON_CNT_0_CFG_DEC_MASK_SHIFT)
#define MMU_PMON_CNT_0 0x1d0
#define MMU_PMON_CNT_0_CNT_M 0xffffffffffULL
#define MMU_PMON_CNT_0_CNT_SHIFT 0
#define MMU_PMON_CNT_0_CNT_MASK (MMU_PMON_CNT_0_CNT_M << MMU_PMON_CNT_0_CNT_SHIFT)
#define MMU_PMON_CNT_0_STS_ACC 0x1d8
#define MMU_PMON_CNT_0_STS 0x1e0
#define MMU_PMON_CNT_0_STS_CNT_OF_M 0x1ULL
#define MMU_PMON_CNT_0_STS_CNT_OF_SHIFT 2
#define MMU_PMON_CNT_0_STS_CNT_OF_MASK (MMU_PMON_CNT_0_STS_CNT_OF_M << MMU_PMON_CNT_0_STS_CNT_OF_SHIFT)
#define MMU_PMON_CNT_0_STS_ACC_UF_M 0x1ULL
#define MMU_PMON_CNT_0_STS_ACC_UF_SHIFT 1
#define MMU_PMON_CNT_0_STS_ACC_UF_MASK (MMU_PMON_CNT_0_STS_ACC_UF_M << MMU_PMON_CNT_0_STS_ACC_UF_SHIFT)
#define MMU_PMON_CNT_0_STS_ACC_OF_M 0x1ULL
#define MMU_PMON_CNT_0_STS_ACC_OF_SHIFT 0
#define MMU_PMON_CNT_0_STS_ACC_OF_MASK (MMU_PMON_CNT_0_STS_ACC_OF_M << MMU_PMON_CNT_0_STS_ACC_OF_SHIFT)
#define MMU_PMON_CNT_1_CFG 0x1e8
#define MMU_PMON_CNT_1_CFG_MODE_M 0x7ULL
#define MMU_PMON_CNT_1_CFG_MODE_SHIFT 0
#define MMU_PMON_CNT_1_CFG_MODE_MASK (MMU_PMON_CNT_1_CFG_MODE_M << MMU_PMON_CNT_1_CFG_MODE_SHIFT)
#define MMU_PMON_CNT_1_CFG_DEC_MASK_M 0xfULL
#define MMU_PMON_CNT_1_CFG_DEC_MASK_SHIFT 55
#define MMU_PMON_CNT_1_CFG_DEC_MASK_MASK (MMU_PMON_CNT_1_CFG_DEC_MASK_M << MMU_PMON_CNT_1_CFG_DEC_MASK_SHIFT)
#define MMU_PMON_CNT_1_CFG_INC_MASK_M 0xfULL
#define MMU_PMON_CNT_1_CFG_INC_MASK_SHIFT 39
#define MMU_PMON_CNT_1_CFG_INC_MASK_MASK (MMU_PMON_CNT_1_CFG_INC_MASK_M << MMU_PMON_CNT_1_CFG_INC_MASK_SHIFT)
#define MMU_PMON_CNT_1_CFG_DEC_INV_M 0x1ULL
#define MMU_PMON_CNT_1_CFG_DEC_INV_SHIFT 63
#define MMU_PMON_CNT_1_CFG_DEC_INV_MASK (MMU_PMON_CNT_1_CFG_DEC_INV_M << MMU_PMON_CNT_1_CFG_DEC_INV_SHIFT)
#define MMU_PMON_CNT_1_CFG_DEC_MATCH_M 0xfULL
#define MMU_PMON_CNT_1_CFG_DEC_MATCH_SHIFT 59
#define MMU_PMON_CNT_1_CFG_DEC_MATCH_MASK (MMU_PMON_CNT_1_CFG_DEC_MATCH_M << MMU_PMON_CNT_1_CFG_DEC_MATCH_SHIFT)
#define MMU_PMON_CNT_1_CFG_THRESHOLD_M 0xffULL
#define MMU_PMON_CNT_1_CFG_THRESHOLD_SHIFT 3
#define MMU_PMON_CNT_1_CFG_THRESHOLD_MASK (MMU_PMON_CNT_1_CFG_THRESHOLD_M << MMU_PMON_CNT_1_CFG_THRESHOLD_SHIFT)
#define MMU_PMON_CNT_1_CFG_DEC_SEL_M 0x1fULL
#define MMU_PMON_CNT_1_CFG_DEC_SEL_SHIFT 48
#define MMU_PMON_CNT_1_CFG_DEC_SEL_MASK (MMU_PMON_CNT_1_CFG_DEC_SEL_M << MMU_PMON_CNT_1_CFG_DEC_SEL_SHIFT)
#define MMU_PMON_CNT_1_CFG_INC_MATCH_M 0xfULL
#define MMU_PMON_CNT_1_CFG_INC_MATCH_SHIFT 43
#define MMU_PMON_CNT_1_CFG_INC_MATCH_MASK (MMU_PMON_CNT_1_CFG_INC_MATCH_M << MMU_PMON_CNT_1_CFG_INC_MATCH_SHIFT)
#define MMU_PMON_CNT_1_CFG_INC_SEL_M 0x1fULL
#define MMU_PMON_CNT_1_CFG_INC_SEL_SHIFT 32
#define MMU_PMON_CNT_1_CFG_INC_SEL_MASK (MMU_PMON_CNT_1_CFG_INC_SEL_M << MMU_PMON_CNT_1_CFG_INC_SEL_SHIFT)
#define MMU_PMON_CNT_1_CFG_INC_INV_M 0x1ULL
#define MMU_PMON_CNT_1_CFG_INC_INV_SHIFT 47
#define MMU_PMON_CNT_1_CFG_INC_INV_MASK (MMU_PMON_CNT_1_CFG_INC_INV_M << MMU_PMON_CNT_1_CFG_INC_INV_SHIFT)
#define MMU_PMON_CNT_1 0x1f0
#define MMU_PMON_CNT_1_CNT_M 0xffffffffffULL
#define MMU_PMON_CNT_1_CNT_SHIFT 0
#define MMU_PMON_CNT_1_CNT_MASK (MMU_PMON_CNT_1_CNT_M << MMU_PMON_CNT_1_CNT_SHIFT)
#define MMU_PMON_CNT_1_STS_ACC 0x1f8
#define MMU_PMON_CNT_1_STS 0x200
#define MMU_PMON_CNT_1_STS_ACC_UF_M 0x1ULL
#define MMU_PMON_CNT_1_STS_ACC_UF_SHIFT 1
#define MMU_PMON_CNT_1_STS_ACC_UF_MASK (MMU_PMON_CNT_1_STS_ACC_UF_M << MMU_PMON_CNT_1_STS_ACC_UF_SHIFT)
#define MMU_PMON_CNT_1_STS_ACC_OF_M 0x1ULL
#define MMU_PMON_CNT_1_STS_ACC_OF_SHIFT 0
#define MMU_PMON_CNT_1_STS_ACC_OF_MASK (MMU_PMON_CNT_1_STS_ACC_OF_M << MMU_PMON_CNT_1_STS_ACC_OF_SHIFT)
#define MMU_PMON_CNT_1_STS_CNT_OF_M 0x1ULL
#define MMU_PMON_CNT_1_STS_CNT_OF_SHIFT 2
#define MMU_PMON_CNT_1_STS_CNT_OF_MASK (MMU_PMON_CNT_1_STS_CNT_OF_M << MMU_PMON_CNT_1_STS_CNT_OF_SHIFT)
#define AXI_SPARE 0x208
#define AXI_SPARE_SPARE15_M 0x1ULL
#define AXI_SPARE_SPARE15_SHIFT 15
#define AXI_SPARE_SPARE15_MASK (AXI_SPARE_SPARE15_M << AXI_SPARE_SPARE15_SHIFT)
#define AXI_SPARE_SPARE12_M 0x1ULL
#define AXI_SPARE_SPARE12_SHIFT 12
#define AXI_SPARE_SPARE12_MASK (AXI_SPARE_SPARE12_M << AXI_SPARE_SPARE12_SHIFT)
#define AXI_SPARE_SPARE11_M 0x1ULL
#define AXI_SPARE_SPARE11_SHIFT 11
#define AXI_SPARE_SPARE11_MASK (AXI_SPARE_SPARE11_M << AXI_SPARE_SPARE11_SHIFT)
#define AXI_SPARE_SPARE10_M 0x1ULL
#define AXI_SPARE_SPARE10_SHIFT 10
#define AXI_SPARE_SPARE10_MASK (AXI_SPARE_SPARE10_M << AXI_SPARE_SPARE10_SHIFT)
#define AXI_SPARE_SPARE13_M 0x1ULL
#define AXI_SPARE_SPARE13_SHIFT 13
#define AXI_SPARE_SPARE13_MASK (AXI_SPARE_SPARE13_M << AXI_SPARE_SPARE13_SHIFT)
#define AXI_SPARE_SPARE8_M 0x1ULL
#define AXI_SPARE_SPARE8_SHIFT 8
#define AXI_SPARE_SPARE8_MASK (AXI_SPARE_SPARE8_M << AXI_SPARE_SPARE8_SHIFT)
#define AXI_SPARE_SPARE9_M 0x1ULL
#define AXI_SPARE_SPARE9_SHIFT 9
#define AXI_SPARE_SPARE9_MASK (AXI_SPARE_SPARE9_M << AXI_SPARE_SPARE9_SHIFT)
#define AXI_SPARE_SPARE14_M 0x1ULL
#define AXI_SPARE_SPARE14_SHIFT 14
#define AXI_SPARE_SPARE14_MASK (AXI_SPARE_SPARE14_M << AXI_SPARE_SPARE14_SHIFT)
#define AXI_SPARE_SPARE4_M 0x1ULL
#define AXI_SPARE_SPARE4_SHIFT 4
#define AXI_SPARE_SPARE4_MASK (AXI_SPARE_SPARE4_M << AXI_SPARE_SPARE4_SHIFT)
#define AXI_SPARE_SPARE5_M 0x1ULL
#define AXI_SPARE_SPARE5_SHIFT 5
#define AXI_SPARE_SPARE5_MASK (AXI_SPARE_SPARE5_M << AXI_SPARE_SPARE5_SHIFT)
#define AXI_SPARE_SPARE6_M 0x1ULL
#define AXI_SPARE_SPARE6_SHIFT 6
#define AXI_SPARE_SPARE6_MASK (AXI_SPARE_SPARE6_M << AXI_SPARE_SPARE6_SHIFT)
#define AXI_SPARE_SPARE7_M 0x1ULL
#define AXI_SPARE_SPARE7_SHIFT 7
#define AXI_SPARE_SPARE7_MASK (AXI_SPARE_SPARE7_M << AXI_SPARE_SPARE7_SHIFT)
#define AXI_SPARE_SPARE0_M 0x1ULL
#define AXI_SPARE_SPARE0_SHIFT 0
#define AXI_SPARE_SPARE0_MASK (AXI_SPARE_SPARE0_M << AXI_SPARE_SPARE0_SHIFT)
#define AXI_SPARE_SPARE1_M 0x1ULL
#define AXI_SPARE_SPARE1_SHIFT 1
#define AXI_SPARE_SPARE1_MASK (AXI_SPARE_SPARE1_M << AXI_SPARE_SPARE1_SHIFT)
#define AXI_SPARE_SPARE2_M 0x1ULL
#define AXI_SPARE_SPARE2_SHIFT 2
#define AXI_SPARE_SPARE2_MASK (AXI_SPARE_SPARE2_M << AXI_SPARE_SPARE2_SHIFT)
#define AXI_SPARE_SPARE3_M 0x1ULL
#define AXI_SPARE_SPARE3_SHIFT 3
#define AXI_SPARE_SPARE3_MASK (AXI_SPARE_SPARE3_M << AXI_SPARE_SPARE3_SHIFT)


/* IO IPU Register Group Offsets */
#define MPI_CAP               0x00
#define MPI_STRM_SEL          0x08
#define MPI_COMMON_BLOCK_END  0x10
#define MPI_COMMON_BLOCK_LEN  MPI_COMMON_BLOCK_END
#define MPI_COMMON_NUM_REGS  (MPI_COMMON_BLOCK_LEN / IPU_REG_WIDTH)

#define MPI_STRM_BLOCK_START MPI_COMMON_BLOCK_LEN
#define MPI_STRM_CTRL         MPI_STRM_BLOCK_START
#define MPI_STRM_CNFG0_L      0x18
#define MPI_STRM_CNFG0_H      0x1C
#define MPI_STRM_CNFG1_L      0x20
#define MPI_STRM_CNFG1_H      0x24
#define MPI_STRM_CNFG0_L_RO   0x28
#define MPI_STRM_CNFG0_H_RO   0x2C
#define MPI_STRM_CNFG1_L_RO   0x30
#define MPI_STRM_CNFG1_H_RO   0x34
#define MPI_STRM_BLOCK_END    0x38
#define MPI_STRM_BLOCK_LEN    (MPI_STRM_BLOCK_END - MPI_STRM_BLOCK_START)
#define MPI_STRM_NUM_REGS     (MPI_STRM_BLOCK_LEN / IPU_REG_WIDTH)

#define MPO_COMMON_BLOCK_START MPI_STRM_BLOCK_END
#define MPO_CAP               MPO_COMMON_BLOCK_START
#define MPO_STRM_SEL          (MPO_COMMON_BLOCK_START + 0x08)
#define MPO_COMMON_BLOCK_END  (MPO_COMMON_BLOCK_START + 0x10)
#define MPO_COMMON_BLOCK_LEN  (MPO_COMMON_BLOCK_END - MPO_COMMON_BLOCK_START)
#define MPO_COMMON_NUM_REGS   (MPO_COMMON_BLOCK_LEN / IPU_REG_WIDTH)
#define MPO_STRM_BLOCK_START  MPO_COMMON_BLOCK_END
#define MPO_STRM_CTRL         MPO_STRM_BLOCK_START
#define MPO_STRM_CNFG0_L      0x50
#define MPO_STRM_CNFG0_H      0x54
#define MPO_STRM_CNFG1        0x58
#define MPO_STRM_CNFG0_L_RO   0x60
#define MPO_STRM_CNFG0_H_RO   0x64
#define MPO_STRM_CNFG1_RO     0x68
#define MPO_STRM_BLOCK_END    0x70
#define MPO_STRM_BLOCK_LEN    (MPO_STRM_BLOCK_END - MPO_STRM_BLOCK_START)
#define MPO_STRM_NUM_REGS     (MPO_STRM_BLOCK_LEN / IPU_REG_WIDTH)

#define IO_IPU_BLOCK_LEN       MPO_STRM_BLOCK_END
#define IO_IPU_NUM_REGS       (IO_IPU_BLOCK_LEN / IPU_REG_WIDTH)

/* MPI_CAP Register Bits */
#define MPI_MAX_IFC_MASK      0x0F
#define MPI_MAX_STRM_M        0x0F
#define MPI_MAX_STRM_SHIFT    4
#define MPI_MAX_STRM_MASK     (MPI_MAX_STRM_M << MPI_MAX_STRM_SHIFT)

/* MPI_STRM_SEL Register Bits */
#define MPI_STRM_SEL_MASK     0x0F
#define MPI_STRM_SEL_DEF      15

/* MPI_STRM_CTRL Register Bits */
#define MPI_STRM_EN           (1 << 0)
#define MPI_STRM_CLEANUP      (1 << 1)
#define MPI_STRM_RST          (1 << 2)
#define MPI_STRM_SOF_ISR      (1 << 3)
#define MPI_STRM_SOF_IMR      (1 << 4)
#define MPI_STRM_OVF_ISR      (1 << 5)
#define MPI_STRM_OVF_IMR      (1 << 6)
#define MPI_STRM_NUM_FRAME_M  0xFFFF
#define MPI_STRM_NUM_FRAME_SHIFT 8
#define MPI_STRM_NUM_FRAME_MASK (MPI_STRM_NUM_FRAME_M <<                       \
		MPI_STRM_NUM_FRAME_SHIFT)

/* MPI_STRM_CNFG0_L Register Bits */
#define MPI_VC_MASK           0x03
#define MPI_DT_IN_M           0x3F
#define MPI_DT_IN_SHIFT       4
#define MPI_DT_IN_MASK        (MPI_DT_IN_M << MPI_DT_IN_SHIFT)
#define MPI_DT_PROC_M         0x3F
#define MPI_DT_PROC_SHIFT     10
#define MPI_DT_PROC_MASK      (MPI_DT_PROC_M << MPI_DT_PROC_SHIFT)
#define MPI_STRP_HEIGHT_M     0x3F
#define MPI_STRP_HEIGHT_SHIFT 16
#define MPI_STRP_HEIGHT_MASK (MPI_STRP_HEIGHT_M << MPI_STRP_HEIGHT_SHIFT)

#define MPI_VC_MAX            MPI_VC_MASK
#define MPI_DT_IN_MAX         MPI_DT_IN_M
#define MPI_DT_IN_DEF         42
#define MPI_DT_PROC_MAX       MPI_DT_PROC_M
#define MPI_DT_PROC_DEF       46
#define MPI_STRP_HEIGHT_MIN   1

/* Easel Errata b/32334151
 * MIPI input stripe height is restricted to 28 on V1 IPU
 */
#ifdef CONFIG_PAINTBOX_V1
#define MPI_STRP_HEIGHT_MAX   28
#else
#define MPI_STRP_HEIGHT_MAX   32
#endif

#define MPI_STRP_HEIGHT_ROW_ALIGN 4
#define MPI_STRP_HEIGHT_DEF   3

/* MPI_STRM_CNFG0_H Register Bits */
#define MPI_IMG_WIDTH_MASK    0xFFFF
#define MPI_IMG_HEIGHT_M      0xFFFF
#define MPI_IMG_HEIGHT_SHIFT  16
#define MPI_IMG_HEIGHT_MASK   (MPI_IMG_HEIGHT_M << MPI_IMG_HEIGHT_SHIFT)

#define MPI_IMG_WIDTH_MAX     MPI_IMG_WIDTH_MASK
#define MPI_IMG_WIDTH_DEF     640
#define MPI_IMG_HEIGHT_MAX    MPI_IMG_HEIGHT_M
#define MPI_IMG_HEIGHT_DEF    480

/* MPI_STRM_CNFG1_L Register Bits */
#define MPI_SEG_START_MASK    0x7F
#define MPI_SEG_END_M         0x7F
#define MPI_SEG_END_SHIFT     16
#define MPI_SEG_END_MASK      (MPI_SEG_END_M << MPI_SEG_END_SHIFT)

#define MPI_SEG_START_MAX     MPI_SEG_START_MASK
#define MPI_SEG_END_MIN       1
#define MPI_SEG_END_MAX       128

/* MPI_STRM_CNFG1_H Register Bits */
#define MPI_SEGS_PER_ROW_MASK 0x7F
#define MPI_SEG_WORDS_PER_ROW_M 0xFFF
#define MPI_SEG_WORDS_PER_ROW_SHIFT 16
#define MPI_SEG_WORDS_PER_ROW_MASK (MPI_SEG_WORDS_PER_ROW_M <<                 \
		MPI_SEG_WORDS_PER_ROW_SHIFT)

#define MPI_SEGS_PER_ROW_MIN  1
#define MPI_SEGS_PER_ROW_MAX  128

#define MPI_SEG_WORDS_PER_ROW_MIN 1
#define MPI_SEG_WORDS_PER_ROW_MAX 4096
#define MPI_SEG_WORDS_PER_ROW_DEF 39

/* MPO_CAP Register Bits */
#define MPO_MAX_IFC_MASK      0x0F
#define MPO_MAX_STRM_M        0x0F
#define MPO_MAX_STRM_SHIFT    4
#define MPO_MAX_STRM_MASK     (MPO_MAX_STRM_M << MPO_MAX_STRM_SHIFT)

/* MPO_STRM_SEL Register Bits */
#define MPO_STRM_SEL_MASK     0x0F
#define MPO_STRM_SEL_DEF      3

/* MPO_STRM_CTRL Register Bits */
#define MPO_STRM_EN           (1 << 0)
#define MPO_STRM_RSYNC_EN     (1 << 1)
#define MPO_STRM_CLEANUP      (1 << 2)
#define MPO_STRM_RST          (1 << 3)
#define MPO_STRM_EOF_ISR      (1 << 4)
#define MPO_STRM_EOF_IMR      (1 << 5)

/* MPO_STRM_CNFG0_L Register Bits */
#define MPO_VC_MASK           0x03
#define MPO_DT_OUT_M          0x3F
#define MPO_DT_OUT_SHIFT      4
#define MPO_DT_OUT_MASK       (MPO_DT_OUT_M << MPO_DT_OUT_SHIFT)
#define MPO_DT_PROC_M         0x3F
#define MPO_DT_PROC_SHIFT     10
#define MPO_DT_PROC_MASK      (MPO_DT_PROC_M << MPO_DT_PROC_SHIFT)
#define MPO_STRP_HEIGHT_M     0x3F
#define MPO_STRP_HEIGHT_SHIFT 16
#define MPO_STRP_HEIGHT_MASK  (MPO_STRP_HEIGHT_M << MPO_STRP_HEIGHT_SHIFT)

#define MPO_DT_OUT_DEF        42
#define MPO_DT_PROC_DEF       46

#define MPO_STRP_HEIGHT_MIN   1
#define MPO_STRP_HEIGHT_MAX   32
#define MPO_STRP_HEIGHT_DEF   3

/* MPO_STRM_CNFG0_H Register Bits */
#define MPO_IMG_WIDTH_MASK    0xFFFF
#define MPO_IMG_HEIGHT_M      0xFFFF
#define MPO_IMG_HEIGHT_SHIFT  16
#define MPO_IMG_HEIGHT_MASK   (MPO_IMG_HEIGHT_M << MPO_IMG_HEIGHT_SHIFT)

#define MPO_IMG_HEIGHT_DEF    480
#define MPO_IMG_WIDTH_DEF     640

/* MPO_STRM_CNFG1 Register Bits */
#define MPO_SEG_END_MASK      0x7F
#define MPO_SEGS_PER_ROW_M    0x7F
#define MPO_SEGS_PER_ROW_SHIFT 16
#define MPO_SEGS_PER_ROW_MASK (MPO_SEGS_PER_ROW_M << MPO_SEGS_PER_ROW_SHIFT)

#define MPO_SEG_END_MIN       1
#define MPO_SEG_END_MAX       128

#define MPO_SEGS_PER_ROW_MIN  1
#define MPO_SEGS_PER_ROW_MAX  128
#define MPO_SEGS_PER_ROW_DEF  2

/* DMA Register Group Offsets */
#define DMA_CTRL              0x00
#define DMA_CHAN_CTRL_L       0x08
#define DMA_CHAN_CTRL_H       0x0C
#define DMA_CAP0              0x10
#define DMA_PMON_CFG          0x100
#define DMA_PMON_CNT_0_CFG    0x108
#define DMA_PMON_CNT_0        0x110
#define DMA_PMON_CNT_0_STS_ACC 0x118
#define DMA_PMON_CNT_0_STS    0x120
#define DMA_PMON_CNT_1_CFG    0x128
#define DMA_PMON_CNT_1        0x130
#define DMA_PMON_CNT_1_STS_ACC 0x138
#define DMA_PMON_CNT_1_STS    0x140
#define DMA_PMON_CNT_2_CFG    0x148
#define DMA_PMON_CNT_2        0x150
#define DMA_PMON_CNT_2_STS_ACC 0x158
#define DMA_PMON_CNT_2_STS    0x160
#define DMA_PMON_CNT_3_CFG    0x168
#define DMA_PMON_CNT_3        0x170
#define DMA_PMON_CNT_3_STS_ACC 0x178
#define DMA_PMON_CNT_3_STS    0x180
#define DMA_CTRL_BLOCK_END    0x188
#define DMA_CTRL_BLOCK_LEN    DMA_CTRL_BLOCK_END
#define DMA_CTRL_NUM_REGS     (DMA_CTRL_BLOCK_LEN / IPU_REG_WIDTH)

#define DMA_CHAN_BLOCK_START  0x188
#define DMA_CHAN_MODE         0x188
#define DMA_CHAN_IMG_FORMAT   0x190
#define DMA_CHAN_IMG_SIZE     0x198
#define DMA_CHAN_IMG_POS_L    0x1A0
#define DMA_CHAN_IMG_POS_H    0x1A4
#define DMA_CHAN_IMG_LAYOUT_L 0x1A8
#define DMA_CHAN_IMG_LAYOUT_H 0x1AC
#define DMA_CHAN_BIF_XFER     0x1B0
#define DMA_CHAN_VA_L         0x1B8
#define DMA_CHAN_VA_H         0x1BC
#define DMA_CHAN_VA_BDRY_L    0x1C0
#define DMA_CHAN_VA_BDRY_H    0x1C4
#define DMA_CHAN_NOC_XFER_L   0x1C8
#define DMA_CHAN_NOC_XFER_H   0x1CC
#define DMA_CHAN_NODE         0x1D0
#define DMA_CHAN_IMR          0x1D8
#define DMA_CHAN_ISR          0x1E0
#define DMA_CHAN_ISR_OVF      0x1E8
#define DMA_CHAN_MODE_RO      0x1F0
#define DMA_CHAN_IMG_FORMAT_RO 0x1F8
#define DMA_CHAN_IMG_SIZE_L_RO 0x200
#define DMA_CHAN_IMG_SIZE_H_RO 0x204
#define DMA_CHAN_IMG_POS_L_RO 0x208
#define DMA_CHAN_IMG_POS_H_RO 0x20C
#define DMA_CHAN_IMG_LAYOUT_L_RO 0x210
#define DMA_CHAN_IMG_LAYOUT_H_RO 0x214
#define DMA_CHAN_BIF_XFER_RO  0x218
#define DMA_CHAN_VA_L_RO      0x220
#define DMA_CHAN_VA_H_RO      0x224
#define DMA_CHAN_VA_BDRY_L_RO 0x228
#define DMA_CHAN_VA_BDRY_H_RO 0x22C
#define DMA_CHAN_NOC_XFER_L_RO 0x230
#define DMA_CHAN_NOC_XFER_H_RO 0x234
#define DMA_CHAN_NODE_RO      0x238
#define DMA_CHAN_DEPENDENCY   0x240
#define DMA_CHAN_BLOCK_END    0x248

#define DMA_CHAN_BLOCK_LEN    (DMA_CHAN_BLOCK_END - DMA_CHAN_BLOCK_START)
#define DMA_CHAN_NUM_REGS     (DMA_CHAN_BLOCK_LEN / IPU_REG_WIDTH)

#define DMA_STAT_BLOCK_START  0x248
#define DMA_STAT_CTRL         0x248
#define DMA_STAT_STATE        0x250
#define DMA_STAT_PTR_L        0x258
#define DMA_STAT_PTR_H        0x25C
#define DMS_STAT_ADDR_L       0x260
#define DMA_STAT_ADDR_H       0x264
#define DMA_SPARE             0x268
#define DMA_STAT_BLOCK_END    0x270

#define DMA_STAT_BLOCK_LEN    (DMA_STAT_BLOCK_END - DMA_STAT_BLOCK_START)
#define DMA_STAT_NUM_REGS     (DMA_STAT_BLOCK_LEN / IPU_REG_WIDTH)

#define DMA_BLOCK_LEN         DMA_STAT_BLOCK_END
#define DMA_NUM_REGS          (DMA_BLOCK_LEN / IPU_REG_WIDTH)

/* DMA_CTRL Register Bits */
#define DMA_RESET             (1 << 0)
#define DMA_CHAN_SEL_WIDTH    0xFF
#define DMA_CHAN_SEL_SHIFT    8
#define DMA_CHAN_SEL_MASK     (DMA_CHAN_SEL_WIDTH << DMA_CHAN_SEL_SHIFT)
#define DMA_AXI_SWIZZLE_NONE  0
#define DMA_AXI_SWIZZLE_BIG_ENDIAN 1
#define DMA_AXI_SWIZZLE_NEIGHBOR_BYTES 2
#define DMA_AXI_SWIZZLE_M     0x03
#define DMA_AXI_SWIZZLE_SHIFT 16
#define DMA_AXI_SWIZZLE_MASK (DMA_AXI_SWIZZLE_M << DMA_AXI_SWIZZLE_SHIFT)

#define DMA_CHAN_SEL_DEF      31

/* DMA_CHAN_CTRL_L Register Bits */
#define DMA_CHAN_RESET_MASK   0xFFFF
#define DMA_CHAN_DOUBLE_BUF_M 0xFFFF
#define DMA_CHAN_DOUBLE_BUF_SHIFT 16
#define DMA_CHAN_DOUBLE_BUF_MASK (DMA_CHAN_DOUBLE_BUF_M <<                     \
		DMA_CHAN_DOUBLE_BUF_SHIFT)

#define DMA_CHAN_DOUBLE_BUF_DEF 0xFFFF

/* DMA_CHAN_CTRL_H Register Bits */
#define DMA_STOP_MASK         0xFFFF

/* DMA_CAP0 Register Bits */
#define MAX_DMA_CHAN_MASK     0xFF

/* DMA_CHAN_MODE Register Bits */
#define DMA_CHAN_ENA          (1 << 0)
#define DMA_CHAN_SRC_DRAM     0
#define DMA_CHAN_SRC_LBP      1
#define DMA_CHAN_SRC_STP      2
#define DMA_CHAN_SRC_MIPI_IN  3
#define DMA_CHAN_SRC_SHIFT    4
#define DMA_CHAN_SRC_M        3
#define DMA_CHAN_SRC_MASK     (DMA_CHAN_SRC_M << DMA_CHAN_SRC_SHIFT)
#define DMA_CHAN_DST_DRAM     0
#define DMA_CHAN_DST_LBP      1
#define DMA_CHAN_DST_STP      2
#define DMA_CHAN_DST_MIPI_OUT 3
#define DMA_CHAN_DST_SHIFT    6
#define DMA_CHAN_DST_M        3
#define DMA_CHAN_DST_MASK     (DMA_CHAN_DST_M << DMA_CHAN_DST_SHIFT)
#define DMA_CHAN_ADDR_MODE_ABSTRACT (0 << 8)
#define DMA_CHAN_ADDR_MODE_PHYSICAL (1 << 8)
#define DMA_CHAN_GATHER       (1 << 9)

#define DMA_CHAN_SRC_DEF      DMA_CHAN_SRC_DRAM
#define DMA_CHAN_DST_DEF      DMA_CHAN_DST_LBP

/* DMA_CHAN_IMG_FORMAT */
#define DMA_CHAN_COMPONENTS_MASK 0x03
#define DMA_CHAN_PLANES_M     0x3F
#define DMA_CHAN_PLANES_SHIFT 4
#define DMA_CHAN_PLANES_MASK (DMA_CHAN_PLANES_M << DMA_CHAN_PLANES_SHIFT)
#define DMA_CHAN_BIT_DEPTH8   0
#define DMA_CHAN_BIT_DEPTH10  1
#define DMA_CHAN_BIT_DEPTH12  2
#define DMA_CHAN_BIT_DEPTH14  3
#define DMA_CHAN_BIT_DEPTH16  4
#define DMA_CHAN_BIT_DEPTH_M 0x7
#define DMA_CHAN_BIT_DEPTH_SHIFT 12
#define DMA_CHAN_BIT_DEPTH_MASK (DMA_CHAN_BIT_DEPTH_M <<                       \
		DMA_CHAN_BIT_DEPTH_SHIFT)
#define DMA_CHAN_MIPI_RAW_FORMAT (1 << 20)
#define DMA_CHAN_RGBA_FORMAT_DISABLED 0
#define DMA_CHAN_RGBA_FORMAT_RGBA 1
#define DMA_CHAN_RGBA_FORMAT_ARGB 2
#define DMA_CHAN_RGBA_FORMAT_M 0x03
#define DMA_CHAN_RGBA_FORMAT_SHIFT 24
#define DMA_CHAN_RGBA_FORMAT_MASK (DMA_CHAN_RGBA_FORMAT_M <<                   \
		DMA_CHAN_RGBA_FORMAT_SHIFT)
#define DMA_CHAN_BLOCK_4X4    (1 << 26)

#define DMA_CHAN_MIN_COMPONENTS 1
#define DMA_CHAN_MAX_COMPONENTS 4
#define DMA_CHAN_MIN_PLANES   1
#define DMA_CHAN_MAX_PLANES   64

/* DMA_CHAN_IMG_SIZE Register Bits */
#define DMA_CHAN_IMG_SIZE_MASK  0xFFFF
#define DMA_CHAN_IMG_WIDTH_MASK DMA_CHAN_IMG_SIZE_MASK
#define DMA_CHAN_IMG_HEIGHT_SHIFT 16
#define DMA_CHAN_IMG_HEIGHT_MASK (DMA_CHAN_IMG_SIZE_MASK <<                    \
		DMA_CHAN_IMG_HEIGHT_SHIFT)

#define DMA_CHAN_IMG_SIZE_MAX  0xFFFF

#define DMA_CHAN_IMG_WIDTH_DEF 128
#define DMA_CHAN_IMG_HEIGHT_DEF 32

/* DMA_CHAN_IMG_POS_L Register Bits */
#define DMA_CHAN_START_X_MASK  0xFFFF
#define DMA_CHAN_START_Y_M     0xFFFF
#define DMA_CHAN_START_Y_SHIFT 16
#define DMA_CHAN_START_Y_MASK  (DMA_CHAN_START_Y_M << DMA_CHAN_START_Y_SHIFT)

#define DMA_CHAN_START_MAX     32767
#define DMA_CHAN_START_MIN     -32767

/* DMA_CHAN_IMG_POS_H Register Bits */
#define DMA_CHAN_LB_START_X_MASK  0xFFFF
#define DMA_CHAN_LB_START_Y_M     0xFFFF
#define DMA_CHAN_LB_START_Y_SHIFT 16
#define DMA_CHAN_LB_START_Y_MASK  (DMA_CHAN_LB_START_Y_M <<                    \
		DMA_CHAN_LB_START_Y_SHIFT)

#define DMA_CHAN_LB_START_MAX     32767
#define DMA_CHAN_LB_START_MIN     -32767

/* DMA CHAN_IMG_POS_H STP DRAM Register Bits */
#define DMA_CHAN_LB_START_Y_STP_IRAM        (0 << 2)
#define DMA_CHAN_LB_START_Y_STP_CRAM        (1 << 2)
#define DMA_CHAN_LB_START_Y_STP_DRAM        (2 << 2)
#define DMA_CHAN_LB_START_Y_STP_ARRAY_16x16 (3 << 2)
#define DMA_CHAN_LB_START_Y_STP_ARRAY_32x32 (4 << 2)

#define DMA_STP_SRAM_ADDR_ALIGN_MASK 0x1F

/* DMA_CHAN_IMG_LAYOUT */
#define DMA_CHAN_PLANE_STRIDE_WIDTH 35
#define DMA_CHAN_PLANE_STRIDE_MAX   ((1ULL << DMA_CHAN_PLANE_STRIDE_WIDTH) - 1)

/* DMA_CHAN_IMG_LAYOUT_L Register Bits */
#define DMA_CHAN_ROW_STRIDE_WIDTH 16
#define DMA_CHAN_ROW_STRIDE_MAX   ((1 << DMA_CHAN_ROW_STRIDE_WIDTH) - 1)
#define DMA_CHAN_ROW_STRIDE_MASK DMA_CHAN_ROW_STRIDE_MAX
#define DMA_CHAN_PLANE_STRIDE_LOW_SHIFT 16
#define DMA_CHAN_PLANE_STRIDE_LOW_WIDTH 16
#define DMA_CHAN_PLANE_STRIDE_LOW_M ((1 << DMA_CHAN_PLANE_STRIDE_LOW_WIDTH) - 1)
#define DMA_CHAN_PLANE_STRIDE_LOW_MASK (DMA_CHAN_PLANE_STRIDE_LOW_M <<         \
		DMA_CHAN_PLANE_STRIDE_LOW_SHIFT)

/* DMA_CHAN_IMG_LAYOUT_H Register Bits */
#define DMA_CHAN_PLANE_STRIDE_HIGH_WIDTH (DMA_CHAN_PLANE_STRIDE_WIDTH -        \
		DMA_CHAN_PLANE_STRIDE_LOW_WIDTH)
#define DMA_CHAN_PLANE_STRIDE_HIGH_M                                           \
		((1 << DMA_CHAN_PLANE_STRIDE_HIGH_WIDTH) - 1)
#define DMA_CHAN_PLANE_STRIDE_HIGH_MASK DMA_CHAN_PLANE_STRIDE_HIGH_M

/* DMA_CHAN_BIF_XFER Register Bits */
#define DMA_CHAN_STRIPE_HEIGHT_MASK 0xFFFF
#define DMA_CHAN_OUTSTANDING_M  0x3F
#define DMA_CHAN_OUTSTANDING_SHIFT 16
#define DMA_CHAN_OUTSTANDING_MASK (DMA_CHAN_OUTSTANDING_M <<                   \
		DMA_CHAN_OUTSTANDING_SHIFT)

#define DMA_CHAN_MAX_STRIPES     256

#define DMA_CHAN_OUTSTANDING_DEF  16
#define DMA_CHAN_STRIPE_HEIGHT_DEF 0x04

/* DMA_CHAN_VA_BDRY */
#define DMA_VA_BDRY_WIDTH 41
#define DMA_MAX_IMG_TRANSFER_LEN ((1ULL << DMA_VA_BDRY_WIDTH) - 1)

/* DMA_CHAN_NOC_XFER_L Register Bits */
#define DMA_CHAN_SHEET_WIDTH_MASK 0x1FF
#define DMA_CHAN_SHEET_HEIGHT_M 0x1F
#define DMA_CHAN_SHEET_HEIGHT_SHIFT 12
#define DMA_CHAN_SHEET_HEIGHT_MASK (DMA_CHAN_SHEET_HEIGHT_M <<                 \
		DMA_CHAN_SHEET_HEIGHT_SHIFT)
#define DMA_CHAN_NOC_OUTSTANDING_M 0xF
#define DMA_CHAN_NOC_OUTSTANDING_SHIFT 20
#define DMA_CHAN_NOC_OUTSTANDING_MASK (DMA_CHAN_NOC_OUTSTANDING_M <<           \
		DMA_CHAN_NOC_OUTSTANDING_SHIFT)

#define DMA_CHAN_MAX_SHEET_WIDTH 256
#define DMA_CHAN_MAX_SHEET_HEIGHT 16

#define DMA_CHAN_SHEET_WIDTH_DEF  64
#define DMA_CHAN_SHEET_HEIGHT_DEF 4

#define DMA_CHAN_NOC_OUTSTANDING_MIN 1
#define DMA_CHAN_NOC_OUTSTANDING_MAX 8
#define DMA_CHAN_NOC_OUTSTANDING_DEF 8

/* DMA_CHAN_NOC_XFER_H Register Bits */
#define DMA_CHAN_RETRY_INTERVAL_MASK 0x3FF
#define DMA_CHAN_RETRY_INTERVAL_MIN 1
#define DMA_CHAN_RETRY_INTERVAL_MAX 0x3FF
#define DMA_CHAN_RETRY_INTERVAL_DEF 100

#define DMA_CHAN_NOC_XFER_DYN_OUTSTANDING_MASK (1 << 16)

/* DMA_CHAN_NODE Register Bits */
#define DMA_CHAN_CORE_ID_MASK 0xFF
#define DMA_CHAN_LB_ID_WIDTH  0xFF
#define DMA_CHAN_LB_ID_SHIFT  8
#define DMA_CHAN_LB_ID_MASK   (DMA_CHAN_LB_ID_WIDTH << DMA_CHAN_LB_ID_SHIFT)
#define DMA_CHAN_RPTR_ID_WIDTH 0xFF
#define DMA_CHAN_RPTR_ID_SHIFT 16
#define DMA_CHAN_RPTR_ID_MASK   (DMA_CHAN_RPTR_ID_WIDTH <<                     \
		DMA_CHAN_RPTR_ID_SHIFT)

/* DMA_CHAN_IMR and DMA_CHAN_ISR Register Bits */
#define DMA_CHAN_INT_EOF      (1 << 0)
#define DMA_CHAN_INT_VA_ERR   (1 << 2)

/* DMA_STAT_CTRL Register Bits */
#define DMA_STAT_ENABLE        (1 << 0)
#define DMA_STAT_CHAN_SEL_SHIFT 1
#define DMA_STAT_CHAN_SEL_M    0xF
#define DMA_STAT_CHAN_SEL_MASK DMA_STAT_CHAN_SEL_M << DMA_STAT_CHAN_SEL_SHIFT)
#define DMA_STAT_DST_BIF_SEL_SSP (1 << 5)
#define DMA_STAT_ADDR_MODE     (1 << 6)

/* DMA_STAT_STATE Register Bits */
#define DMA_STAT_WR_MNGR_CHAN_MODE (1 << 19)
#define DMA_STAT_RD_MNGR_CHAN_MODE (1 << 18)
#define DMA_STAT_DST_MODE      (1 << 17)
#define DMA_STAT_SRC_MODE      (1 << 16)
#define DMA_STAT_WR_MNGR_CHAN_M 0xF
#define DMA_STAT_WR_MNGR_CHAN_SHIFT 12
#define DMA_STAT_WR_MNGR_CHAN_MASK (DMA_STAT_WR_MNGR_CHAN_M <<                 \
        DMA_STAT_WR_MNGR_CHAN_SHIFT)
#define DMA_STAT_RD_MNGR_CHAN_M 0xF
#define DMA_STAT_RD_MNGR_CHAN_SHIFT 8
#define DMA_STAT_RD_MNGR_CHAN_MASK (DMA_STAT_RD_MNGR_CHAN_M <<                 \
        DMA_STAT_RD_MNGR_CHAN_SHIFT)
#define DMA_STAT_DST_SHIFT     4
#define DMA_STAT_DST_M         0xF
#define DMA_STAT_DST_MASK      (DMA_STAT_DST_M << DMA_STAT_DST_SHIFT)
#define DMA_STAT_SRC_MASK      0xF

/* DMA_STAT_PTR_L */
#define DMA_STAT_Y_M           0xFFFF
#define DMA_STAT_Y_SHIFT       16
#define DMA_STAT_Y_MASK        (DMA_STAT_Y_M << DMA_STAT_Y_SHIFT)
#define DMA_STAT_X_MASK        0xFFFF

/* DMA_STAT_PTR_H */
#define DMA_STAT_MODE          (1 << 31)
#define DMA_STAT_HEIGHT_SHIFT  12
#define DMA_STAT_HEIGHT_M      0x1F
#define DMA_STAT_HEIGHT_MASK   (DMA_STAT_HEIGHT_M << DMA_STAT_HEIGHT_SHIFT)
#define DMA_STAT_WIDTH_MASK    0x1FF

/* Module : IPU_LIB_DREGFILE_LBP*/
#define LBP_SEL 0x0
#define LBP_SEL_LBP_SEL_M 0xfULL
#define LBP_SEL_LBP_SEL_SHIFT 0
#define LBP_SEL_LBP_SEL_MASK (LBP_SEL_LBP_SEL_M << LBP_SEL_LBP_SEL_SHIFT)
#define LBP_SEL_LB_SEL_M 0xfULL
#define LBP_SEL_LB_SEL_SHIFT 8
#define LBP_SEL_LB_SEL_MASK (LBP_SEL_LB_SEL_M << LBP_SEL_LB_SEL_SHIFT)
#define LBP_CTRL 0x8
#define LBP_CTRL_LB_RESET_M 0xffULL
#define LBP_CTRL_LB_RESET_SHIFT 16
#define LBP_CTRL_LB_RESET_MASK (LBP_CTRL_LB_RESET_M << LBP_CTRL_LB_RESET_SHIFT)
#define LBP_CTRL_LB_ENA_M 0xfULL
#define LBP_CTRL_LB_ENA_SHIFT 0
#define LBP_CTRL_LB_ENA_MASK (LBP_CTRL_LB_ENA_M << LBP_CTRL_LB_ENA_SHIFT)
#define LBP_CTRL_LB_INIT_M 0xffULL
#define LBP_CTRL_LB_INIT_SHIFT 32
#define LBP_CTRL_LB_INIT_MASK (LBP_CTRL_LB_INIT_M << LBP_CTRL_LB_INIT_SHIFT)
#define LBP_CTRL_PMON_RD_SEL_M 0xffULL
#define LBP_CTRL_PMON_RD_SEL_SHIFT 48
#define LBP_CTRL_PMON_RD_SEL_MASK (LBP_CTRL_PMON_RD_SEL_M << LBP_CTRL_PMON_RD_SEL_SHIFT)
#define LBP_CTRL_LBP_RESET_M 0x1ULL
#define LBP_CTRL_LBP_RESET_SHIFT 4
#define LBP_CTRL_LBP_RESET_MASK (LBP_CTRL_LBP_RESET_M << LBP_CTRL_LBP_RESET_SHIFT)
#define LBP_STAT 0x10
#define LBP_STAT_CRB_READY_M 0x1ULL
#define LBP_STAT_CRB_READY_SHIFT 0
#define LBP_STAT_CRB_READY_MASK (LBP_STAT_CRB_READY_M << LBP_STAT_CRB_READY_SHIFT)
#define LBP_STAT_WDC_READY_M 0x1ULL
#define LBP_STAT_WDC_READY_SHIFT 1
#define LBP_STAT_WDC_READY_MASK (LBP_STAT_WDC_READY_M << LBP_STAT_WDC_READY_SHIFT)
#define LBP_STAT_RD_READY_M 0x1ULL
#define LBP_STAT_RD_READY_SHIFT 2
#define LBP_STAT_RD_READY_MASK (LBP_STAT_RD_READY_M << LBP_STAT_RD_READY_SHIFT)
#define LBP_CAP0 0x18
#define LBP_CAP0_MAX_CHAN_M 0x1ffULL
#define LBP_CAP0_MAX_CHAN_SHIFT 4
#define LBP_CAP0_MAX_CHAN_MASK (LBP_CAP0_MAX_CHAN_M << LBP_CAP0_MAX_CHAN_SHIFT)
#define LBP_CAP0_MAX_RPTR_M 0xfULL
#define LBP_CAP0_MAX_RPTR_SHIFT 28
#define LBP_CAP0_MAX_RPTR_MASK (LBP_CAP0_MAX_RPTR_M << LBP_CAP0_MAX_RPTR_SHIFT)
#define LBP_CAP0_MAX_FB_ROWS_M 0xfffULL
#define LBP_CAP0_MAX_FB_ROWS_SHIFT 16
#define LBP_CAP0_MAX_FB_ROWS_MASK (LBP_CAP0_MAX_FB_ROWS_M << LBP_CAP0_MAX_FB_ROWS_SHIFT)
#define LBP_CAP0_MAX_LB_M 0xfULL
#define LBP_CAP0_MAX_LB_SHIFT 0
#define LBP_CAP0_MAX_LB_MASK (LBP_CAP0_MAX_LB_M << LBP_CAP0_MAX_LB_SHIFT)
#define LBP_CAP1 0x20
#define LBP_CAP1_MEM_SIZE_M 0xffffffffULL
#define LBP_CAP1_MEM_SIZE_SHIFT 0
#define LBP_CAP1_MEM_SIZE_MASK (LBP_CAP1_MEM_SIZE_M << LBP_CAP1_MEM_SIZE_SHIFT)
#define LBP_RAM_CTRL 0x28
#define LBP_RAM_CTRL_RUN_M 0x1ULL
#define LBP_RAM_CTRL_RUN_SHIFT 0
#define LBP_RAM_CTRL_RUN_MASK (LBP_RAM_CTRL_RUN_M << LBP_RAM_CTRL_RUN_SHIFT)
#define LBP_RAM_CTRL_WRITE_M 0x1ULL
#define LBP_RAM_CTRL_WRITE_SHIFT 1
#define LBP_RAM_CTRL_WRITE_MASK (LBP_RAM_CTRL_WRITE_M << LBP_RAM_CTRL_WRITE_SHIFT)
#define LBP_RAM_CTRL_RAM_ADDR_M 0xfffULL
#define LBP_RAM_CTRL_RAM_ADDR_SHIFT 16
#define LBP_RAM_CTRL_RAM_ADDR_MASK (LBP_RAM_CTRL_RAM_ADDR_M << LBP_RAM_CTRL_RAM_ADDR_SHIFT)
#define LBP_RAM_DATA0 0x30
#define LBP_RAM_DATA1 0x38
#define LBP_RAM_DATA2 0x40
#define LBP_RAM_DATA3 0x48
#define LBP_PMON_CFG 0x50
#define LBP_PMON_CFG_ENABLE_M 0x1ULL
#define LBP_PMON_CFG_ENABLE_SHIFT 0
#define LBP_PMON_CFG_ENABLE_MASK (LBP_PMON_CFG_ENABLE_M << LBP_PMON_CFG_ENABLE_SHIFT)
#define LBP_PMON_CNT_0_CFG 0x58
#define LBP_PMON_CNT_0_CFG_DEC_INV_M 0x1ULL
#define LBP_PMON_CNT_0_CFG_DEC_INV_SHIFT 63
#define LBP_PMON_CNT_0_CFG_DEC_INV_MASK (LBP_PMON_CNT_0_CFG_DEC_INV_M << LBP_PMON_CNT_0_CFG_DEC_INV_SHIFT)
#define LBP_PMON_CNT_0_CFG_INC_INV_M 0x1ULL
#define LBP_PMON_CNT_0_CFG_INC_INV_SHIFT 47
#define LBP_PMON_CNT_0_CFG_INC_INV_MASK (LBP_PMON_CNT_0_CFG_INC_INV_M << LBP_PMON_CNT_0_CFG_INC_INV_SHIFT)
#define LBP_PMON_CNT_0_CFG_INC_MATCH_M 0xfULL
#define LBP_PMON_CNT_0_CFG_INC_MATCH_SHIFT 43
#define LBP_PMON_CNT_0_CFG_INC_MATCH_MASK (LBP_PMON_CNT_0_CFG_INC_MATCH_M << LBP_PMON_CNT_0_CFG_INC_MATCH_SHIFT)
#define LBP_PMON_CNT_0_CFG_THRESHOLD_M 0xffULL
#define LBP_PMON_CNT_0_CFG_THRESHOLD_SHIFT 3
#define LBP_PMON_CNT_0_CFG_THRESHOLD_MASK (LBP_PMON_CNT_0_CFG_THRESHOLD_M << LBP_PMON_CNT_0_CFG_THRESHOLD_SHIFT)
#define LBP_PMON_CNT_0_CFG_DEC_MASK_M 0xfULL
#define LBP_PMON_CNT_0_CFG_DEC_MASK_SHIFT 55
#define LBP_PMON_CNT_0_CFG_DEC_MASK_MASK (LBP_PMON_CNT_0_CFG_DEC_MASK_M << LBP_PMON_CNT_0_CFG_DEC_MASK_SHIFT)
#define LBP_PMON_CNT_0_CFG_MODE_M 0x7ULL
#define LBP_PMON_CNT_0_CFG_MODE_SHIFT 0
#define LBP_PMON_CNT_0_CFG_MODE_MASK (LBP_PMON_CNT_0_CFG_MODE_M << LBP_PMON_CNT_0_CFG_MODE_SHIFT)
#define LBP_PMON_CNT_0_CFG_INC_SEL_M 0x3fULL
#define LBP_PMON_CNT_0_CFG_INC_SEL_SHIFT 32
#define LBP_PMON_CNT_0_CFG_INC_SEL_MASK (LBP_PMON_CNT_0_CFG_INC_SEL_M << LBP_PMON_CNT_0_CFG_INC_SEL_SHIFT)
#define LBP_PMON_CNT_0_CFG_DEC_MATCH_M 0xfULL
#define LBP_PMON_CNT_0_CFG_DEC_MATCH_SHIFT 59
#define LBP_PMON_CNT_0_CFG_DEC_MATCH_MASK (LBP_PMON_CNT_0_CFG_DEC_MATCH_M << LBP_PMON_CNT_0_CFG_DEC_MATCH_SHIFT)
#define LBP_PMON_CNT_0_CFG_INC_MASK_M 0xfULL
#define LBP_PMON_CNT_0_CFG_INC_MASK_SHIFT 39
#define LBP_PMON_CNT_0_CFG_INC_MASK_MASK (LBP_PMON_CNT_0_CFG_INC_MASK_M << LBP_PMON_CNT_0_CFG_INC_MASK_SHIFT)
#define LBP_PMON_CNT_0_CFG_DEC_SEL_M 0x3fULL
#define LBP_PMON_CNT_0_CFG_DEC_SEL_SHIFT 48
#define LBP_PMON_CNT_0_CFG_DEC_SEL_MASK (LBP_PMON_CNT_0_CFG_DEC_SEL_M << LBP_PMON_CNT_0_CFG_DEC_SEL_SHIFT)
#define LBP_PMON_CNT_0 0x60
#define LBP_PMON_CNT_0_CNT_M 0xffffffffffULL
#define LBP_PMON_CNT_0_CNT_SHIFT 0
#define LBP_PMON_CNT_0_CNT_MASK (LBP_PMON_CNT_0_CNT_M << LBP_PMON_CNT_0_CNT_SHIFT)
#define LBP_PMON_CNT_0_STS_ACC 0x68
#define LBP_PMON_CNT_0_STS 0x70
#define LBP_PMON_CNT_0_STS_ACC_OF_M 0x1ULL
#define LBP_PMON_CNT_0_STS_ACC_OF_SHIFT 0
#define LBP_PMON_CNT_0_STS_ACC_OF_MASK (LBP_PMON_CNT_0_STS_ACC_OF_M << LBP_PMON_CNT_0_STS_ACC_OF_SHIFT)
#define LBP_PMON_CNT_0_STS_CNT_OF_M 0x1ULL
#define LBP_PMON_CNT_0_STS_CNT_OF_SHIFT 2
#define LBP_PMON_CNT_0_STS_CNT_OF_MASK (LBP_PMON_CNT_0_STS_CNT_OF_M << LBP_PMON_CNT_0_STS_CNT_OF_SHIFT)
#define LBP_PMON_CNT_0_STS_ACC_UF_M 0x1ULL
#define LBP_PMON_CNT_0_STS_ACC_UF_SHIFT 1
#define LBP_PMON_CNT_0_STS_ACC_UF_MASK (LBP_PMON_CNT_0_STS_ACC_UF_M << LBP_PMON_CNT_0_STS_ACC_UF_SHIFT)
#define LBP_PMON_CNT_1_CFG 0x78
#define LBP_PMON_CNT_1_CFG_INC_SEL_M 0x3fULL
#define LBP_PMON_CNT_1_CFG_INC_SEL_SHIFT 32
#define LBP_PMON_CNT_1_CFG_INC_SEL_MASK (LBP_PMON_CNT_1_CFG_INC_SEL_M << LBP_PMON_CNT_1_CFG_INC_SEL_SHIFT)
#define LBP_PMON_CNT_1_CFG_DEC_MATCH_M 0xfULL
#define LBP_PMON_CNT_1_CFG_DEC_MATCH_SHIFT 59
#define LBP_PMON_CNT_1_CFG_DEC_MATCH_MASK (LBP_PMON_CNT_1_CFG_DEC_MATCH_M << LBP_PMON_CNT_1_CFG_DEC_MATCH_SHIFT)
#define LBP_PMON_CNT_1_CFG_DEC_SEL_M 0x3fULL
#define LBP_PMON_CNT_1_CFG_DEC_SEL_SHIFT 48
#define LBP_PMON_CNT_1_CFG_DEC_SEL_MASK (LBP_PMON_CNT_1_CFG_DEC_SEL_M << LBP_PMON_CNT_1_CFG_DEC_SEL_SHIFT)
#define LBP_PMON_CNT_1_CFG_INC_MATCH_M 0xfULL
#define LBP_PMON_CNT_1_CFG_INC_MATCH_SHIFT 43
#define LBP_PMON_CNT_1_CFG_INC_MATCH_MASK (LBP_PMON_CNT_1_CFG_INC_MATCH_M << LBP_PMON_CNT_1_CFG_INC_MATCH_SHIFT)
#define LBP_PMON_CNT_1_CFG_MODE_M 0x7ULL
#define LBP_PMON_CNT_1_CFG_MODE_SHIFT 0
#define LBP_PMON_CNT_1_CFG_MODE_MASK (LBP_PMON_CNT_1_CFG_MODE_M << LBP_PMON_CNT_1_CFG_MODE_SHIFT)
#define LBP_PMON_CNT_1_CFG_DEC_MASK_M 0xfULL
#define LBP_PMON_CNT_1_CFG_DEC_MASK_SHIFT 55
#define LBP_PMON_CNT_1_CFG_DEC_MASK_MASK (LBP_PMON_CNT_1_CFG_DEC_MASK_M << LBP_PMON_CNT_1_CFG_DEC_MASK_SHIFT)
#define LBP_PMON_CNT_1_CFG_DEC_INV_M 0x1ULL
#define LBP_PMON_CNT_1_CFG_DEC_INV_SHIFT 63
#define LBP_PMON_CNT_1_CFG_DEC_INV_MASK (LBP_PMON_CNT_1_CFG_DEC_INV_M << LBP_PMON_CNT_1_CFG_DEC_INV_SHIFT)
#define LBP_PMON_CNT_1_CFG_INC_MASK_M 0xfULL
#define LBP_PMON_CNT_1_CFG_INC_MASK_SHIFT 39
#define LBP_PMON_CNT_1_CFG_INC_MASK_MASK (LBP_PMON_CNT_1_CFG_INC_MASK_M << LBP_PMON_CNT_1_CFG_INC_MASK_SHIFT)
#define LBP_PMON_CNT_1_CFG_INC_INV_M 0x1ULL
#define LBP_PMON_CNT_1_CFG_INC_INV_SHIFT 47
#define LBP_PMON_CNT_1_CFG_INC_INV_MASK (LBP_PMON_CNT_1_CFG_INC_INV_M << LBP_PMON_CNT_1_CFG_INC_INV_SHIFT)
#define LBP_PMON_CNT_1_CFG_THRESHOLD_M 0xffULL
#define LBP_PMON_CNT_1_CFG_THRESHOLD_SHIFT 3
#define LBP_PMON_CNT_1_CFG_THRESHOLD_MASK (LBP_PMON_CNT_1_CFG_THRESHOLD_M << LBP_PMON_CNT_1_CFG_THRESHOLD_SHIFT)
#define LBP_PMON_CNT_1 0x80
#define LBP_PMON_CNT_1_CNT_M 0xffffffffffULL
#define LBP_PMON_CNT_1_CNT_SHIFT 0
#define LBP_PMON_CNT_1_CNT_MASK (LBP_PMON_CNT_1_CNT_M << LBP_PMON_CNT_1_CNT_SHIFT)
#define LBP_PMON_CNT_1_STS_ACC 0x88
#define LBP_PMON_CNT_1_STS 0x90
#define LBP_PMON_CNT_1_STS_ACC_UF_M 0x1ULL
#define LBP_PMON_CNT_1_STS_ACC_UF_SHIFT 1
#define LBP_PMON_CNT_1_STS_ACC_UF_MASK (LBP_PMON_CNT_1_STS_ACC_UF_M << LBP_PMON_CNT_1_STS_ACC_UF_SHIFT)
#define LBP_PMON_CNT_1_STS_ACC_OF_M 0x1ULL
#define LBP_PMON_CNT_1_STS_ACC_OF_SHIFT 0
#define LBP_PMON_CNT_1_STS_ACC_OF_MASK (LBP_PMON_CNT_1_STS_ACC_OF_M << LBP_PMON_CNT_1_STS_ACC_OF_SHIFT)
#define LBP_PMON_CNT_1_STS_CNT_OF_M 0x1ULL
#define LBP_PMON_CNT_1_STS_CNT_OF_SHIFT 2
#define LBP_PMON_CNT_1_STS_CNT_OF_MASK (LBP_PMON_CNT_1_STS_CNT_OF_M << LBP_PMON_CNT_1_STS_CNT_OF_SHIFT)
#define LB_CTRL0 0xc0
#define LB_CTRL0_FB_ROWS_M 0xfffULL
#define LB_CTRL0_FB_ROWS_SHIFT 16
#define LB_CTRL0_FB_ROWS_MASK (LB_CTRL0_FB_ROWS_M << LB_CTRL0_FB_ROWS_SHIFT)
#define LB_CTRL0_REUSE_ROWS_M 0x1fULL
#define LB_CTRL0_REUSE_ROWS_SHIFT 32
#define LB_CTRL0_REUSE_ROWS_MASK (LB_CTRL0_REUSE_ROWS_M << LB_CTRL0_REUSE_ROWS_SHIFT)
#define LB_CTRL0_NUM_RPTR_M 0xfULL
#define LB_CTRL0_NUM_RPTR_SHIFT 0
#define LB_CTRL0_NUM_RPTR_MASK (LB_CTRL0_NUM_RPTR_M << LB_CTRL0_NUM_RPTR_SHIFT)
#define LB_CTRL0_NUM_CHAN_M 0x1ffULL
#define LB_CTRL0_NUM_CHAN_SHIFT 4
#define LB_CTRL0_NUM_CHAN_MASK (LB_CTRL0_NUM_CHAN_M << LB_CTRL0_NUM_CHAN_SHIFT)
#define LB_OFFSET 0xc8
#define LB_OFFSET_OFFSET_Y_M 0xffffULL
#define LB_OFFSET_OFFSET_Y_SHIFT 16
#define LB_OFFSET_OFFSET_Y_MASK (LB_OFFSET_OFFSET_Y_M << LB_OFFSET_OFFSET_Y_SHIFT)
#define LB_OFFSET_OFFSET_X_M 0xffffULL
#define LB_OFFSET_OFFSET_X_SHIFT 0
#define LB_OFFSET_OFFSET_X_MASK (LB_OFFSET_OFFSET_X_M << LB_OFFSET_OFFSET_X_SHIFT)
#define LB_OFFSET_FB_OFFSET_M 0xffULL
#define LB_OFFSET_FB_OFFSET_SHIFT 48
#define LB_OFFSET_FB_OFFSET_MASK (LB_OFFSET_FB_OFFSET_M << LB_OFFSET_FB_OFFSET_SHIFT)
#define LB_OFFSET_OFFSET_CHAN_M 0x1ffULL
#define LB_OFFSET_OFFSET_CHAN_SHIFT 32
#define LB_OFFSET_OFFSET_CHAN_MASK (LB_OFFSET_OFFSET_CHAN_M << LB_OFFSET_OFFSET_CHAN_SHIFT)
#define LB_BDRY 0xd0
#define LB_BDRY_BDRY_M 0x3ULL
#define LB_BDRY_BDRY_SHIFT 0
#define LB_BDRY_BDRY_MASK (LB_BDRY_BDRY_M << LB_BDRY_BDRY_SHIFT)
#define LB_BDRY_BDRY_VAL_M 0xffffULL
#define LB_BDRY_BDRY_VAL_SHIFT 16
#define LB_BDRY_BDRY_VAL_MASK (LB_BDRY_BDRY_VAL_M << LB_BDRY_BDRY_VAL_SHIFT)
#define LB_IMG_SIZE 0xd8
#define LB_IMG_SIZE_IMG_HEIGHT_M 0xffffULL
#define LB_IMG_SIZE_IMG_HEIGHT_SHIFT 16
#define LB_IMG_SIZE_IMG_HEIGHT_MASK (LB_IMG_SIZE_IMG_HEIGHT_M << LB_IMG_SIZE_IMG_HEIGHT_SHIFT)
#define LB_IMG_SIZE_IMG_WIDTH_M 0xffffULL
#define LB_IMG_SIZE_IMG_WIDTH_SHIFT 0
#define LB_IMG_SIZE_IMG_WIDTH_MASK (LB_IMG_SIZE_IMG_WIDTH_M << LB_IMG_SIZE_IMG_WIDTH_SHIFT)
#define LB_SB_SIZE 0xe0
#define LB_SB_SIZE_SB_ROWS_M 0xfffULL
#define LB_SB_SIZE_SB_ROWS_SHIFT 16
#define LB_SB_SIZE_SB_ROWS_MASK (LB_SB_SIZE_SB_ROWS_M << LB_SB_SIZE_SB_ROWS_SHIFT)
#define LB_SB_SIZE_SB_COLS_M 0xffffULL
#define LB_SB_SIZE_SB_COLS_SHIFT 0
#define LB_SB_SIZE_SB_COLS_MASK (LB_SB_SIZE_SB_COLS_M << LB_SB_SIZE_SB_COLS_SHIFT)
#define LB_BASE 0xe8
#define LB_BASE_FB_BASE_ADDR_M 0xfffULL
#define LB_BASE_FB_BASE_ADDR_SHIFT 0
#define LB_BASE_FB_BASE_ADDR_MASK (LB_BASE_FB_BASE_ADDR_M << LB_BASE_FB_BASE_ADDR_SHIFT)
#define LB_BASE_SB_BASE_ADDR_M 0xfffULL
#define LB_BASE_SB_BASE_ADDR_SHIFT 16
#define LB_BASE_SB_BASE_ADDR_MASK (LB_BASE_SB_BASE_ADDR_M << LB_BASE_SB_BASE_ADDR_SHIFT)
#define LB_STAT 0xf0
#define LB_STAT_EMPTY_M 0xffULL
#define LB_STAT_EMPTY_SHIFT 1
#define LB_STAT_EMPTY_MASK (LB_STAT_EMPTY_M << LB_STAT_EMPTY_SHIFT)
#define LB_STAT_FULL_M 0x1ULL
#define LB_STAT_FULL_SHIFT 0
#define LB_STAT_FULL_MASK (LB_STAT_FULL_M << LB_STAT_FULL_SHIFT)
#define LB_L_PARAM 0xf8
#define LB_L_PARAM_L_INC_M 0xfffULL
#define LB_L_PARAM_L_INC_SHIFT 0
#define LB_L_PARAM_L_INC_MASK (LB_L_PARAM_L_INC_M << LB_L_PARAM_L_INC_SHIFT)
#define LB_L_PARAM_L_WIDTH_M 0xfffULL
#define LB_L_PARAM_L_WIDTH_SHIFT 16
#define LB_L_PARAM_L_WIDTH_MASK (LB_L_PARAM_L_WIDTH_M << LB_L_PARAM_L_WIDTH_SHIFT)
#define LBP_SPARE 0x100
#define LBP_SPARE_SPARE16_M 0x1ULL
#define LBP_SPARE_SPARE16_SHIFT 16
#define LBP_SPARE_SPARE16_MASK (LBP_SPARE_SPARE16_M << LBP_SPARE_SPARE16_SHIFT)
#define LBP_SPARE_SPARE17_M 0x1ULL
#define LBP_SPARE_SPARE17_SHIFT 17
#define LBP_SPARE_SPARE17_MASK (LBP_SPARE_SPARE17_M << LBP_SPARE_SPARE17_SHIFT)
#define LBP_SPARE_SPARE14_M 0x1ULL
#define LBP_SPARE_SPARE14_SHIFT 14
#define LBP_SPARE_SPARE14_MASK (LBP_SPARE_SPARE14_M << LBP_SPARE_SPARE14_SHIFT)
#define LBP_SPARE_SPARE15_M 0x1ULL
#define LBP_SPARE_SPARE15_SHIFT 15
#define LBP_SPARE_SPARE15_MASK (LBP_SPARE_SPARE15_M << LBP_SPARE_SPARE15_SHIFT)
#define LBP_SPARE_SPARE12_M 0x1ULL
#define LBP_SPARE_SPARE12_SHIFT 12
#define LBP_SPARE_SPARE12_MASK (LBP_SPARE_SPARE12_M << LBP_SPARE_SPARE12_SHIFT)
#define LBP_SPARE_SPARE13_M 0x1ULL
#define LBP_SPARE_SPARE13_SHIFT 13
#define LBP_SPARE_SPARE13_MASK (LBP_SPARE_SPARE13_M << LBP_SPARE_SPARE13_SHIFT)
#define LBP_SPARE_SPARE10_M 0x1ULL
#define LBP_SPARE_SPARE10_SHIFT 10
#define LBP_SPARE_SPARE10_MASK (LBP_SPARE_SPARE10_M << LBP_SPARE_SPARE10_SHIFT)
#define LBP_SPARE_SPARE11_M 0x1ULL
#define LBP_SPARE_SPARE11_SHIFT 11
#define LBP_SPARE_SPARE11_MASK (LBP_SPARE_SPARE11_M << LBP_SPARE_SPARE11_SHIFT)
#define LBP_SPARE_SPARE18_M 0x1ULL
#define LBP_SPARE_SPARE18_SHIFT 18
#define LBP_SPARE_SPARE18_MASK (LBP_SPARE_SPARE18_M << LBP_SPARE_SPARE18_SHIFT)
#define LBP_SPARE_SPARE19_M 0x1ULL
#define LBP_SPARE_SPARE19_SHIFT 19
#define LBP_SPARE_SPARE19_MASK (LBP_SPARE_SPARE19_M << LBP_SPARE_SPARE19_SHIFT)
#define LBP_SPARE_SPARE4_M 0x1ULL
#define LBP_SPARE_SPARE4_SHIFT 4
#define LBP_SPARE_SPARE4_MASK (LBP_SPARE_SPARE4_M << LBP_SPARE_SPARE4_SHIFT)
#define LBP_SPARE_SPARE5_M 0x1ULL
#define LBP_SPARE_SPARE5_SHIFT 5
#define LBP_SPARE_SPARE5_MASK (LBP_SPARE_SPARE5_M << LBP_SPARE_SPARE5_SHIFT)
#define LBP_SPARE_SPARE6_M 0x1ULL
#define LBP_SPARE_SPARE6_SHIFT 6
#define LBP_SPARE_SPARE6_MASK (LBP_SPARE_SPARE6_M << LBP_SPARE_SPARE6_SHIFT)
#define LBP_SPARE_SPARE7_M 0x1ULL
#define LBP_SPARE_SPARE7_SHIFT 7
#define LBP_SPARE_SPARE7_MASK (LBP_SPARE_SPARE7_M << LBP_SPARE_SPARE7_SHIFT)
#define LBP_SPARE_SPARE0_M 0x1ULL
#define LBP_SPARE_SPARE0_SHIFT 0
#define LBP_SPARE_SPARE0_MASK (LBP_SPARE_SPARE0_M << LBP_SPARE_SPARE0_SHIFT)
#define LBP_SPARE_SPARE1_M 0x1ULL
#define LBP_SPARE_SPARE1_SHIFT 1
#define LBP_SPARE_SPARE1_MASK (LBP_SPARE_SPARE1_M << LBP_SPARE_SPARE1_SHIFT)
#define LBP_SPARE_SPARE2_M 0x1ULL
#define LBP_SPARE_SPARE2_SHIFT 2
#define LBP_SPARE_SPARE2_MASK (LBP_SPARE_SPARE2_M << LBP_SPARE_SPARE2_SHIFT)
#define LBP_SPARE_SPARE3_M 0x1ULL
#define LBP_SPARE_SPARE3_SHIFT 3
#define LBP_SPARE_SPARE3_MASK (LBP_SPARE_SPARE3_M << LBP_SPARE_SPARE3_SHIFT)
#define LBP_SPARE_SPARE8_M 0x1ULL
#define LBP_SPARE_SPARE8_SHIFT 8
#define LBP_SPARE_SPARE8_MASK (LBP_SPARE_SPARE8_M << LBP_SPARE_SPARE8_SHIFT)
#define LBP_SPARE_SPARE9_M 0x1ULL
#define LBP_SPARE_SPARE9_SHIFT 9
#define LBP_SPARE_SPARE9_MASK (LBP_SPARE_SPARE9_M << LBP_SPARE_SPARE9_SHIFT)
#define LBP_SPARE_SPARE30_M 0x1ULL
#define LBP_SPARE_SPARE30_SHIFT 30
#define LBP_SPARE_SPARE30_MASK (LBP_SPARE_SPARE30_M << LBP_SPARE_SPARE30_SHIFT)
#define LBP_SPARE_SPARE29_M 0x1ULL
#define LBP_SPARE_SPARE29_SHIFT 29
#define LBP_SPARE_SPARE29_MASK (LBP_SPARE_SPARE29_M << LBP_SPARE_SPARE29_SHIFT)
#define LBP_SPARE_SPARE28_M 0x1ULL
#define LBP_SPARE_SPARE28_SHIFT 28
#define LBP_SPARE_SPARE28_MASK (LBP_SPARE_SPARE28_M << LBP_SPARE_SPARE28_SHIFT)
#define LBP_SPARE_SPARE27_M 0x1ULL
#define LBP_SPARE_SPARE27_SHIFT 27
#define LBP_SPARE_SPARE27_MASK (LBP_SPARE_SPARE27_M << LBP_SPARE_SPARE27_SHIFT)
#define LBP_SPARE_SPARE26_M 0x1ULL
#define LBP_SPARE_SPARE26_SHIFT 26
#define LBP_SPARE_SPARE26_MASK (LBP_SPARE_SPARE26_M << LBP_SPARE_SPARE26_SHIFT)
#define LBP_SPARE_SPARE25_M 0x1ULL
#define LBP_SPARE_SPARE25_SHIFT 25
#define LBP_SPARE_SPARE25_MASK (LBP_SPARE_SPARE25_M << LBP_SPARE_SPARE25_SHIFT)
#define LBP_SPARE_SPARE24_M 0x1ULL
#define LBP_SPARE_SPARE24_SHIFT 24
#define LBP_SPARE_SPARE24_MASK (LBP_SPARE_SPARE24_M << LBP_SPARE_SPARE24_SHIFT)
#define LBP_SPARE_SPARE23_M 0x1ULL
#define LBP_SPARE_SPARE23_SHIFT 23
#define LBP_SPARE_SPARE23_MASK (LBP_SPARE_SPARE23_M << LBP_SPARE_SPARE23_SHIFT)
#define LBP_SPARE_SPARE22_M 0x1ULL
#define LBP_SPARE_SPARE22_SHIFT 22
#define LBP_SPARE_SPARE22_MASK (LBP_SPARE_SPARE22_M << LBP_SPARE_SPARE22_SHIFT)
#define LBP_SPARE_SPARE21_M 0x1ULL
#define LBP_SPARE_SPARE21_SHIFT 21
#define LBP_SPARE_SPARE21_MASK (LBP_SPARE_SPARE21_M << LBP_SPARE_SPARE21_SHIFT)
#define LBP_SPARE_SPARE20_M 0x1ULL
#define LBP_SPARE_SPARE20_SHIFT 20
#define LBP_SPARE_SPARE20_MASK (LBP_SPARE_SPARE20_M << LBP_SPARE_SPARE20_SHIFT)
#define LBP_SPARE_SPARE31_M 0x1ULL
#define LBP_SPARE_SPARE31_SHIFT 31
#define LBP_SPARE_SPARE31_MASK (LBP_SPARE_SPARE31_M << LBP_SPARE_SPARE31_SHIFT)

/* Note that the STP register group is taken from the generated
 * paintbox-regs.h.  Once the code that uses the register groups is completely
 * switched over this file will become auto-generated.
 */

/* Module : IPU_LIB_DREGFILE_STP*/
#define STP_SEL 0x0
#define STP_SEL_STP_SEL_M 0xfULL
#define STP_SEL_STP_SEL_SHIFT 0
#define STP_SEL_STP_SEL_MASK (STP_SEL_STP_SEL_M << STP_SEL_STP_SEL_SHIFT)
#define STP_CTRL 0x8
#define STP_CTRL_INT_M 0x1ULL
#define STP_CTRL_INT_SHIFT 3
#define STP_CTRL_INT_MASK (STP_CTRL_INT_M << STP_CTRL_INT_SHIFT)
#define STP_CTRL_ENA_M 0x1ULL
#define STP_CTRL_ENA_SHIFT 0
#define STP_CTRL_ENA_MASK (STP_CTRL_ENA_M << STP_CTRL_ENA_SHIFT)
#define STP_CTRL_LBP_MASK_M 0xffffULL
#define STP_CTRL_LBP_MASK_SHIFT 16
#define STP_CTRL_LBP_MASK_MASK (STP_CTRL_LBP_MASK_M << STP_CTRL_LBP_MASK_SHIFT)
#define STP_CTRL_RESUME_M 0x1ULL
#define STP_CTRL_RESUME_SHIFT 2
#define STP_CTRL_RESUME_MASK (STP_CTRL_RESUME_M << STP_CTRL_RESUME_SHIFT)
#define STP_CTRL_RESET_M 0x1ULL
#define STP_CTRL_RESET_SHIFT 1
#define STP_CTRL_RESET_MASK (STP_CTRL_RESET_M << STP_CTRL_RESET_SHIFT)
#define STP_STAT 0x10
#define STP_STAT_PC_M 0x7ffULL
#define STP_STAT_PC_SHIFT 0
#define STP_STAT_PC_MASK (STP_STAT_PC_M << STP_STAT_PC_SHIFT)
#define STP_STAT_STALLED_M 0x1ULL
#define STP_STAT_STALLED_SHIFT 32
#define STP_STAT_STALLED_MASK (STP_STAT_STALLED_M << STP_STAT_STALLED_SHIFT)
#define STP_STAT_INT_CODE_M 0xffffULL
#define STP_STAT_INT_CODE_SHIFT 16
#define STP_STAT_INT_CODE_MASK (STP_STAT_INT_CODE_M << STP_STAT_INT_CODE_SHIFT)
#define STP_CAP 0x18
#define STP_CAP_HALO_MEM_M 0xffULL
#define STP_CAP_HALO_MEM_SHIFT 56
#define STP_CAP_HALO_MEM_MASK (STP_CAP_HALO_MEM_M << STP_CAP_HALO_MEM_SHIFT)
#define STP_CAP_SCALAR_MEM_M 0xffffULL
#define STP_CAP_SCALAR_MEM_SHIFT 16
#define STP_CAP_SCALAR_MEM_MASK (STP_CAP_SCALAR_MEM_M << STP_CAP_SCALAR_MEM_SHIFT)
#define STP_CAP_CONST_MEM_M 0xffffULL
#define STP_CAP_CONST_MEM_SHIFT 32
#define STP_CAP_CONST_MEM_MASK (STP_CAP_CONST_MEM_M << STP_CAP_CONST_MEM_SHIFT)
#define STP_CAP_INST_MEM_M 0xffffULL
#define STP_CAP_INST_MEM_SHIFT 0
#define STP_CAP_INST_MEM_MASK (STP_CAP_INST_MEM_M << STP_CAP_INST_MEM_SHIFT)
#define STP_CAP_VECTOR_MEM_M 0xffULL
#define STP_CAP_VECTOR_MEM_SHIFT 48
#define STP_CAP_VECTOR_MEM_MASK (STP_CAP_VECTOR_MEM_M << STP_CAP_VECTOR_MEM_SHIFT)
#define STP_RAM_CTRL 0x20
#define STP_RAM_CTRL_RAM_TARG_M 0xfULL
#define STP_RAM_CTRL_RAM_TARG_SHIFT 8
#define STP_RAM_CTRL_RAM_TARG_MASK (STP_RAM_CTRL_RAM_TARG_M << STP_RAM_CTRL_RAM_TARG_SHIFT)
#define STP_RAM_CTRL_WRITE_M 0x1ULL
#define STP_RAM_CTRL_WRITE_SHIFT 1
#define STP_RAM_CTRL_WRITE_MASK (STP_RAM_CTRL_WRITE_M << STP_RAM_CTRL_WRITE_SHIFT)
#define STP_RAM_CTRL_RAM_ADDR_M 0xffffULL
#define STP_RAM_CTRL_RAM_ADDR_SHIFT 16
#define STP_RAM_CTRL_RAM_ADDR_MASK (STP_RAM_CTRL_RAM_ADDR_M << STP_RAM_CTRL_RAM_ADDR_SHIFT)
#define STP_RAM_CTRL_RUN_M 0x1ULL
#define STP_RAM_CTRL_RUN_SHIFT 0
#define STP_RAM_CTRL_RUN_MASK (STP_RAM_CTRL_RUN_M << STP_RAM_CTRL_RUN_SHIFT)
#define STP_RAM_CTRL_PRI_M 0x1ULL
#define STP_RAM_CTRL_PRI_SHIFT 2
#define STP_RAM_CTRL_PRI_MASK (STP_RAM_CTRL_PRI_M << STP_RAM_CTRL_PRI_SHIFT)
#define STP_RAM_DATA0 0x28
#define STP_RAM_DATA1 0x30
#define STP_PMON_CFG 0x38
#define STP_PMON_CFG_ENABLE_M 0x1ULL
#define STP_PMON_CFG_ENABLE_SHIFT 0
#define STP_PMON_CFG_ENABLE_MASK (STP_PMON_CFG_ENABLE_M << STP_PMON_CFG_ENABLE_SHIFT)
#define STP_PMON_CNT_0_CFG 0x40
#define STP_PMON_CNT_0_CFG_INC_MATCH_M 0xfULL
#define STP_PMON_CNT_0_CFG_INC_MATCH_SHIFT 43
#define STP_PMON_CNT_0_CFG_INC_MATCH_MASK (STP_PMON_CNT_0_CFG_INC_MATCH_M << STP_PMON_CNT_0_CFG_INC_MATCH_SHIFT)
#define STP_PMON_CNT_0_CFG_INC_SEL_M 0x1fULL
#define STP_PMON_CNT_0_CFG_INC_SEL_SHIFT 32
#define STP_PMON_CNT_0_CFG_INC_SEL_MASK (STP_PMON_CNT_0_CFG_INC_SEL_M << STP_PMON_CNT_0_CFG_INC_SEL_SHIFT)
#define STP_PMON_CNT_0_CFG_DEC_MATCH_M 0xfULL
#define STP_PMON_CNT_0_CFG_DEC_MATCH_SHIFT 59
#define STP_PMON_CNT_0_CFG_DEC_MATCH_MASK (STP_PMON_CNT_0_CFG_DEC_MATCH_M << STP_PMON_CNT_0_CFG_DEC_MATCH_SHIFT)
#define STP_PMON_CNT_0_CFG_DEC_SEL_M 0x1fULL
#define STP_PMON_CNT_0_CFG_DEC_SEL_SHIFT 48
#define STP_PMON_CNT_0_CFG_DEC_SEL_MASK (STP_PMON_CNT_0_CFG_DEC_SEL_M << STP_PMON_CNT_0_CFG_DEC_SEL_SHIFT)
#define STP_PMON_CNT_0_CFG_THRESHOLD_M 0xffULL
#define STP_PMON_CNT_0_CFG_THRESHOLD_SHIFT 3
#define STP_PMON_CNT_0_CFG_THRESHOLD_MASK (STP_PMON_CNT_0_CFG_THRESHOLD_M << STP_PMON_CNT_0_CFG_THRESHOLD_SHIFT)
#define STP_PMON_CNT_0_CFG_INC_INV_M 0x1ULL
#define STP_PMON_CNT_0_CFG_INC_INV_SHIFT 47
#define STP_PMON_CNT_0_CFG_INC_INV_MASK (STP_PMON_CNT_0_CFG_INC_INV_M << STP_PMON_CNT_0_CFG_INC_INV_SHIFT)
#define STP_PMON_CNT_0_CFG_DEC_MASK_M 0xfULL
#define STP_PMON_CNT_0_CFG_DEC_MASK_SHIFT 55
#define STP_PMON_CNT_0_CFG_DEC_MASK_MASK (STP_PMON_CNT_0_CFG_DEC_MASK_M << STP_PMON_CNT_0_CFG_DEC_MASK_SHIFT)
#define STP_PMON_CNT_0_CFG_MODE_M 0x7ULL
#define STP_PMON_CNT_0_CFG_MODE_SHIFT 0
#define STP_PMON_CNT_0_CFG_MODE_MASK (STP_PMON_CNT_0_CFG_MODE_M << STP_PMON_CNT_0_CFG_MODE_SHIFT)
#define STP_PMON_CNT_0_CFG_DEC_INV_M 0x1ULL
#define STP_PMON_CNT_0_CFG_DEC_INV_SHIFT 63
#define STP_PMON_CNT_0_CFG_DEC_INV_MASK (STP_PMON_CNT_0_CFG_DEC_INV_M << STP_PMON_CNT_0_CFG_DEC_INV_SHIFT)
#define STP_PMON_CNT_0_CFG_INC_MASK_M 0xfULL
#define STP_PMON_CNT_0_CFG_INC_MASK_SHIFT 39
#define STP_PMON_CNT_0_CFG_INC_MASK_MASK (STP_PMON_CNT_0_CFG_INC_MASK_M << STP_PMON_CNT_0_CFG_INC_MASK_SHIFT)
#define STP_PMON_CNT_0 0x48
#define STP_PMON_CNT_0_CNT_M 0xffffffffffULL
#define STP_PMON_CNT_0_CNT_SHIFT 0
#define STP_PMON_CNT_0_CNT_MASK (STP_PMON_CNT_0_CNT_M << STP_PMON_CNT_0_CNT_SHIFT)
#define STP_PMON_CNT_0_STS_ACC 0x50
#define STP_PMON_CNT_0_STS 0x58
#define STP_PMON_CNT_0_STS_ACC_UF_M 0x1ULL
#define STP_PMON_CNT_0_STS_ACC_UF_SHIFT 1
#define STP_PMON_CNT_0_STS_ACC_UF_MASK (STP_PMON_CNT_0_STS_ACC_UF_M << STP_PMON_CNT_0_STS_ACC_UF_SHIFT)
#define STP_PMON_CNT_0_STS_ACC_OF_M 0x1ULL
#define STP_PMON_CNT_0_STS_ACC_OF_SHIFT 0
#define STP_PMON_CNT_0_STS_ACC_OF_MASK (STP_PMON_CNT_0_STS_ACC_OF_M << STP_PMON_CNT_0_STS_ACC_OF_SHIFT)
#define STP_PMON_CNT_0_STS_CNT_OF_M 0x1ULL
#define STP_PMON_CNT_0_STS_CNT_OF_SHIFT 2
#define STP_PMON_CNT_0_STS_CNT_OF_MASK (STP_PMON_CNT_0_STS_CNT_OF_M << STP_PMON_CNT_0_STS_CNT_OF_SHIFT)
#define STP_PMON_CNT_1_CFG 0x60
#define STP_PMON_CNT_1_CFG_MODE_M 0x7ULL
#define STP_PMON_CNT_1_CFG_MODE_SHIFT 0
#define STP_PMON_CNT_1_CFG_MODE_MASK (STP_PMON_CNT_1_CFG_MODE_M << STP_PMON_CNT_1_CFG_MODE_SHIFT)
#define STP_PMON_CNT_1_CFG_DEC_MASK_M 0xfULL
#define STP_PMON_CNT_1_CFG_DEC_MASK_SHIFT 55
#define STP_PMON_CNT_1_CFG_DEC_MASK_MASK (STP_PMON_CNT_1_CFG_DEC_MASK_M << STP_PMON_CNT_1_CFG_DEC_MASK_SHIFT)
#define STP_PMON_CNT_1_CFG_INC_INV_M 0x1ULL
#define STP_PMON_CNT_1_CFG_INC_INV_SHIFT 47
#define STP_PMON_CNT_1_CFG_INC_INV_MASK (STP_PMON_CNT_1_CFG_INC_INV_M << STP_PMON_CNT_1_CFG_INC_INV_SHIFT)
#define STP_PMON_CNT_1_CFG_INC_MASK_M 0xfULL
#define STP_PMON_CNT_1_CFG_INC_MASK_SHIFT 39
#define STP_PMON_CNT_1_CFG_INC_MASK_MASK (STP_PMON_CNT_1_CFG_INC_MASK_M << STP_PMON_CNT_1_CFG_INC_MASK_SHIFT)
#define STP_PMON_CNT_1_CFG_INC_MATCH_M 0xfULL
#define STP_PMON_CNT_1_CFG_INC_MATCH_SHIFT 43
#define STP_PMON_CNT_1_CFG_INC_MATCH_MASK (STP_PMON_CNT_1_CFG_INC_MATCH_M << STP_PMON_CNT_1_CFG_INC_MATCH_SHIFT)
#define STP_PMON_CNT_1_CFG_DEC_INV_M 0x1ULL
#define STP_PMON_CNT_1_CFG_DEC_INV_SHIFT 63
#define STP_PMON_CNT_1_CFG_DEC_INV_MASK (STP_PMON_CNT_1_CFG_DEC_INV_M << STP_PMON_CNT_1_CFG_DEC_INV_SHIFT)
#define STP_PMON_CNT_1_CFG_DEC_MATCH_M 0xfULL
#define STP_PMON_CNT_1_CFG_DEC_MATCH_SHIFT 59
#define STP_PMON_CNT_1_CFG_DEC_MATCH_MASK (STP_PMON_CNT_1_CFG_DEC_MATCH_M << STP_PMON_CNT_1_CFG_DEC_MATCH_SHIFT)
#define STP_PMON_CNT_1_CFG_THRESHOLD_M 0xffULL
#define STP_PMON_CNT_1_CFG_THRESHOLD_SHIFT 3
#define STP_PMON_CNT_1_CFG_THRESHOLD_MASK (STP_PMON_CNT_1_CFG_THRESHOLD_M << STP_PMON_CNT_1_CFG_THRESHOLD_SHIFT)
#define STP_PMON_CNT_1_CFG_INC_SEL_M 0x1fULL
#define STP_PMON_CNT_1_CFG_INC_SEL_SHIFT 32
#define STP_PMON_CNT_1_CFG_INC_SEL_MASK (STP_PMON_CNT_1_CFG_INC_SEL_M << STP_PMON_CNT_1_CFG_INC_SEL_SHIFT)
#define STP_PMON_CNT_1_CFG_DEC_SEL_M 0x1fULL
#define STP_PMON_CNT_1_CFG_DEC_SEL_SHIFT 48
#define STP_PMON_CNT_1_CFG_DEC_SEL_MASK (STP_PMON_CNT_1_CFG_DEC_SEL_M << STP_PMON_CNT_1_CFG_DEC_SEL_SHIFT)
#define STP_PMON_CNT_1 0x68
#define STP_PMON_CNT_1_CNT_M 0xffffffffffULL
#define STP_PMON_CNT_1_CNT_SHIFT 0
#define STP_PMON_CNT_1_CNT_MASK (STP_PMON_CNT_1_CNT_M << STP_PMON_CNT_1_CNT_SHIFT)
#define STP_PMON_CNT_1_STS_ACC 0x70
#define STP_PMON_CNT_1_STS 0x78
#define STP_PMON_CNT_1_STS_CNT_OF_M 0x1ULL
#define STP_PMON_CNT_1_STS_CNT_OF_SHIFT 2
#define STP_PMON_CNT_1_STS_CNT_OF_MASK (STP_PMON_CNT_1_STS_CNT_OF_M << STP_PMON_CNT_1_STS_CNT_OF_SHIFT)
#define STP_PMON_CNT_1_STS_ACC_UF_M 0x1ULL
#define STP_PMON_CNT_1_STS_ACC_UF_SHIFT 1
#define STP_PMON_CNT_1_STS_ACC_UF_MASK (STP_PMON_CNT_1_STS_ACC_UF_M << STP_PMON_CNT_1_STS_ACC_UF_SHIFT)
#define STP_PMON_CNT_1_STS_ACC_OF_M 0x1ULL
#define STP_PMON_CNT_1_STS_ACC_OF_SHIFT 0
#define STP_PMON_CNT_1_STS_ACC_OF_MASK (STP_PMON_CNT_1_STS_ACC_OF_M << STP_PMON_CNT_1_STS_ACC_OF_SHIFT)

#endif /* __PAINTBOX_REGS_H__ */
